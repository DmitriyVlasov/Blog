<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Дмитрий Власов</title>
    <link>https://DmitriyVlasov.ru/ru/</link>
      <atom:link href="https://DmitriyVlasov.ru/ru/index.xml" rel="self" type="application/rss+xml" />
    <description>Дмитрий Власов</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>ru-ru</language><copyright>© [Creative Commons Attribution-ShareAlike 3.0 Unported](https://ru.wikipedia.org/wiki/Википедия:Текст_лицензии_Creative_Commons_Attribution-ShareAlike_3.0_Unported)</copyright><lastBuildDate>Tue, 18 Feb 2020 00:00:00 +0100</lastBuildDate>
    <image>
      <url>https://DmitriyVlasov.ru/images/icon_hucbbc31a72d99417bde92f4ec84ba243f_10104_512x512_fill_lanczos_center_2.png</url>
      <title>Дмитрий Власов</title>
      <link>https://DmitriyVlasov.ru/ru/</link>
    </image>
    
    <item>
      <title>Задачи</title>
      <link>https://DmitriyVlasov.ru/ru/domain/blog/todo/</link>
      <pubDate>Tue, 18 Feb 2020 00:00:00 +0100</pubDate>
      <guid>https://DmitriyVlasov.ru/ru/domain/blog/todo/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;Давать название проектов на эсперанто&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;текущие-задачи&#34;&gt;Текущие задачи&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Open&lt;/th&gt;
&lt;th&gt;Closed&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;2020-02-15&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Добавить раздел идеи&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2020-02-15&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Добавить раздел керамика&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2020-02-15&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Научиться настраивать в hugo в шаблоне academic иерархию раздела docs?&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2020-02-17&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Добавить раздел проекты&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;выполненные-задачи&#34;&gt;Выполненные задачи&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Open&lt;/th&gt;
&lt;th&gt;Closed&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;2020-02-17&lt;/td&gt;
&lt;td&gt;2020-02-18&lt;/td&gt;
&lt;td&gt;изменить favicon&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2020-02-18&lt;/td&gt;
&lt;td&gt;2020-02-18&lt;/td&gt;
&lt;td&gt;Перешел на версию &amp;ldquo;Hugo Academic theme v4.7&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2020-02-18&lt;/td&gt;
&lt;td&gt;2020-02-18&lt;/td&gt;
&lt;td&gt;Перешел на версию &amp;ldquo;Hugo Static Site Generator v0.64.1/extended windows&amp;rdquo;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2020-02-18&lt;/td&gt;
&lt;td&gt;2020-02-18&lt;/td&gt;
&lt;td&gt;Добавить раздел блог&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2020-02-17&lt;/td&gt;
&lt;td&gt;2020-02-18&lt;/td&gt;
&lt;td&gt;Добавить раздел курсы&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2020-02-17&lt;/td&gt;
&lt;td&gt;2020-02-18&lt;/td&gt;
&lt;td&gt;Перенести курс по databricks в подраздел курсы&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
</description>
    </item>
    
    <item>
      <title>Идеи</title>
      <link>https://DmitriyVlasov.ru/ru/domain/blog/ideas/</link>
      <pubDate>Tue, 18 Feb 2020 00:00:00 +0100</pubDate>
      <guid>https://DmitriyVlasov.ru/ru/domain/blog/ideas/</guid>
      <description>&lt;h2 id=&#34;поток-идей&#34;&gt;Поток идей&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Open&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;2020-02-15&lt;/td&gt;
&lt;td&gt;Давать название проектов на эсперанто&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
</description>
    </item>
    
    <item>
      <title>ArchiMate</title>
      <link>https://DmitriyVlasov.ru/ru/domain/memo/archimate/</link>
      <pubDate>Mon, 17 Feb 2020 00:00:00 +0100</pubDate>
      <guid>https://DmitriyVlasov.ru/ru/domain/memo/archimate/</guid>
      <description>&lt;p&gt;Примеры использования диаграмм ArchiMate смотрите обширную статью: &lt;a href=&#34;https://www.hosiaisluoma.fi/blog/archimate-examples/&#34;&gt;ArchiMate Examples&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Hugo</title>
      <link>https://DmitriyVlasov.ru/ru/domain/memo/hugo/</link>
      <pubDate>Mon, 17 Feb 2020 00:00:00 +0100</pubDate>
      <guid>https://DmitriyVlasov.ru/ru/domain/memo/hugo/</guid>
      <description>&lt;h2 id=&#34;управление-содержимым-в-hugo&#34;&gt;Управление содержимым в Hugo&lt;/h2&gt;
&lt;p&gt;Ссылки на документацию адаптированную для темы academic:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://sourcethemes.com/academic/docs/managing-content/&#34;&gt;Managing content&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://sourcethemes.com/academic/docs/writing-markdown-latex/&#34;&gt;Writing content with Markdown, LaTeX, and Shortcodes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Power BI and Mongodb</title>
      <link>https://DmitriyVlasov.ru/ru/domain/memo/power-bi-and-mongodb/</link>
      <pubDate>Mon, 17 Feb 2020 00:00:00 +0100</pubDate>
      <guid>https://DmitriyVlasov.ru/ru/domain/memo/power-bi-and-mongodb/</guid>
      <description>&lt;h2 id=&#34;как-загрузить-данные-в-power-bi-из-mongodb&#34;&gt;Как загрузить данные в Power BI из MongoDB?&lt;/h2&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;h3 id=&#34;использовать-mongodb-connector-for-business-intelligence&#34;&gt;Использовать MongoDB Connector for Business Intelligence&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Преимущества&lt;/strong&gt;: работает из коробки&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Особенности&lt;/strong&gt;: стоит существенных денег&lt;/li&gt;
&lt;li&gt;Позволяет использовать выбранный инструмент BI (Power BI, Tableau, Qlik и другие ) для визуализации, обнаружения и представления отчетов по данным MongoDB с помощью стандартных SQL-запросов.&lt;/li&gt;
&lt;li&gt;Он может использоваться в рамках платной подписки &amp;ldquo;MongoDB Enterprise Advanced subscription&amp;rdquo;. Стоимость уточняется отдельно у поставщика.&lt;/li&gt;
&lt;li&gt;возможности смотри подробнее на странице: &lt;a href=&#34;https://www.mongodb.com/products/bi-connector&#34;&gt;MongoDB Connector for Business Intelligence&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;использовать-dremio&#34;&gt;Использовать Dremio&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Преимущества&lt;/strong&gt;: Проект с открытым исходным кодом, Есть сертифицированный коннектор в Power BI (см. статью &lt;a href=&#34;https://powerbi.microsoft.com/ru-ru/blog/announcing-general-availability-of-custom-and-certified-connectors-for-power-bi/&#34;&gt;Announcing General Availability of Custom and Certified Connectors for Power BI&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Особенности&lt;/strong&gt;: &lt;a href=&#34;https://www.dremio.com/&#34;&gt;Dremio&lt;/a&gt; Проект молодой, Дополнительный узел интеграции.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>1C</title>
      <link>https://DmitriyVlasov.ru/ru/domain/memo/1c/</link>
      <pubDate>Fri, 14 Feb 2020 00:00:00 +0100</pubDate>
      <guid>https://DmitriyVlasov.ru/ru/domain/memo/1c/</guid>
      <description>&lt;h2 id=&#34;как-посмотреть-версию-1с-8&#34;&gt;Как посмотреть версию 1С 8?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Зайти в текущий клиент 1С.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;В верхнем левом углу выбрать кнопку &amp;ldquo;меню&amp;rdquo; \ Справка \ О программе.
&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Откроется окно &amp;ldquo;О программе&amp;rdquo;, смотрите версию:
&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Заходим в каталог: &lt;code&gt;C:\Program Files\1cv8\&lt;/code&gt; и выбираем каталог с именем найденной версии.
&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;как-зарегистрировать-библиотеку-1с-8-comcntrdll&#34;&gt;Как зарегистрировать библиотеку 1С 8 &lt;code&gt;comcntr.dll&lt;/code&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#how-to-schow-1C8-version&#34;&gt;Определить&lt;/a&gt; действующую версию 1С&lt;/li&gt;
&lt;li&gt;Запустить терминал &lt;code&gt;cmd&lt;/code&gt; под учетной записью администратора&lt;/li&gt;
&lt;li&gt;Замените в тексте кода ниже &lt;code&gt;&amp;lt;ВЕРСИЯ_1С&amp;gt;&lt;/code&gt; на найденную версию:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cmd&#34; data-lang=&#34;cmd&#34;&gt;C:\Windows\SysWOW64\regsvr32&lt;span style=&#34;color:#75715e&#34;&gt; &amp;#34;C:\Program Files\1cv8\&amp;lt;ВЕРСИЯ_1С&amp;gt;\bin\comcntr.dll&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;Выполните&lt;/li&gt;
&lt;li&gt;Если все прошло хорошо, получите сообщение вида:
&lt;img src=&#34;1c8-register-comcntr.dll-result.png&#34; alt=&#34;1c8-register-comcntr.dll-result&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Excel</title>
      <link>https://DmitriyVlasov.ru/ru/domain/memo/excel/</link>
      <pubDate>Fri, 14 Feb 2020 00:00:00 +0100</pubDate>
      <guid>https://DmitriyVlasov.ru/ru/domain/memo/excel/</guid>
      <description>&lt;h2 id=&#34;я-разрабатываю-вкладку-для-excel-она-не-загружается-как-понять-почему&#34;&gt;Я разрабатываю вкладку для Excel, она не загружается как понять почему?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;В Excel по умолчанию ошибки пользовательского интерфейса скрываются.&lt;/li&gt;
&lt;li&gt;Для того что бы отобразить, нужно зайти в &lt;strong&gt;параметры Excel&lt;/strong&gt; \ Пункт меню &lt;strong&gt;Дополнительно&lt;/strong&gt; \ Раздел &lt;strong&gt;Общие&lt;/strong&gt; \ Поставить флажок &lt;strong&gt;Показывать ошибки интерфейса пользователя надстроек&lt;/strong&gt;
&lt;img src=&#34;excel-show-custom-ribbon-ui-errors.png&#34; alt=&#34;excel-show-custom-ribbon-ui errors&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;я-разрабатываю-пользовательскую-вкладку-в-excel-как-найти-имена-картинок-для-заполнения-тега-imagemso&#34;&gt;Я разрабатываю пользовательскую вкладку в Excel, как найти имена картинок для заполнения тега &lt;code&gt;imageMSO&lt;/code&gt;?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://bert-toolkit.com/imagemso-list.html&#34;&gt;Список иконок &lt;code&gt;imageMSO&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Ffmpeg</title>
      <link>https://DmitriyVlasov.ru/ru/domain/memo/ffmpeg/</link>
      <pubDate>Fri, 14 Feb 2020 00:00:00 +0100</pubDate>
      <guid>https://DmitriyVlasov.ru/ru/domain/memo/ffmpeg/</guid>
      <description>&lt;h2 id=&#34;как-конвертировать-файл-flv-в-mp4&#34;&gt;Как конвертировать файл flv в mp4?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Скачиваете и устанавливаете &lt;a href=&#34;https://ffmpeg.org/download.html&#34;&gt;ffmpeg&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;В командной строке выполняете команду вида &lt;code&gt;ffmpeg -i &amp;quot;input.flv&amp;quot; &amp;quot;output.mp4&amp;quot;&lt;/code&gt;, где:
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;quot;input.flv&amp;quot;&lt;/code&gt; - произвольное имя файла источника&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;quot;output.mp4&amp;quot;&lt;/code&gt; - произвольное имя файла приемника.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Github</title>
      <link>https://DmitriyVlasov.ru/ru/domain/memo/github/</link>
      <pubDate>Fri, 14 Feb 2020 00:00:00 +0100</pubDate>
      <guid>https://DmitriyVlasov.ru/ru/domain/memo/github/</guid>
      <description>&lt;h2 id=&#34;как-обновить-fork-на-github&#34;&gt;Как обновить fork на Github&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Задача: Как обновить до актуального состояния по необходимости свой клон проекта из источника.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;коротко&#34;&gt;Коротко&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Выполнить команду &lt;code&gt;git pull upstream master&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;подробнее&#34;&gt;Подробнее&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Открыть программу Github&lt;/li&gt;
&lt;li&gt;Открыть интересующий репозиторий&lt;/li&gt;
&lt;li&gt;Выполнить команду &amp;ldquo;Repository\Open in Command Prompt&amp;rdquo; или Нажать сочетание клавиш `Ctrl+``&lt;/li&gt;
&lt;li&gt;Выполнить команду &lt;code&gt;git pull upstream master&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Закрыть консоль&lt;/li&gt;
&lt;li&gt;Выполнить команду &amp;ldquo;Repository\Pull&amp;rdquo;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Markdown</title>
      <link>https://DmitriyVlasov.ru/ru/domain/memo/markdown/</link>
      <pubDate>Fri, 14 Feb 2020 00:00:00 +0100</pubDate>
      <guid>https://DmitriyVlasov.ru/ru/domain/memo/markdown/</guid>
      <description>&lt;h2 id=&#34;где-посмотреть-возможности-markdown&#34;&gt;Где посмотреть возможности Markdown?&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://commonmark.org/help/tutorial/index.html&#34;&gt;Учебник по markdown&lt;/a&gt; от разработчиков протокола &lt;a href=&#34;https://commonmark.org&#34;&gt;Commonmark&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;как-регулировать-размер-изображения-в-маркдаун&#34;&gt;Как регулировать размер изображения в маркдаун?&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;(https://commonmark.org/help/tutorial/08-images.html)&#34;&gt;Маркдаун&lt;/a&gt; этого не позволяет сделать.
&lt;a href=&#34;https://github.com/hakimel/reveal.js/issues/1349&#34;&gt;Используйте&lt;/a&gt; html тэг &lt;code&gt;img&lt;/code&gt;, например так&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;img src=&amp;quot;image&amp;quot; width=&amp;quot;40%&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>Windows</title>
      <link>https://DmitriyVlasov.ru/ru/domain/memo/windows/</link>
      <pubDate>Fri, 14 Feb 2020 00:00:00 +0100</pubDate>
      <guid>https://DmitriyVlasov.ru/ru/domain/memo/windows/</guid>
      <description>&lt;h2 id=&#34;как-завершить-работу-приложения-в-windows-из-командной-строки&#34;&gt;Как завершить работу приложения в Windows из командной строки?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Задача: Нужно закрыть Excel и все открытые файлы без сохранения. Можно решить это с помощью команды &lt;code&gt;TASKKILL&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;TASKKILL /im excel.exe /t /f
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;Подробнее о команде в официальной документации &lt;a href=&#34;https://docs.microsoft.com/ru-ru/windows-server/administration/windows-commands/taskkill&#34;&gt;&lt;code&gt;TASKKILL&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Бойся, но действуй</title>
      <link>https://DmitriyVlasov.ru/ru/domain/books/boysya-no-deystvuy/</link>
      <pubDate>Wed, 08 May 2019 00:00:00 +0100</pubDate>
      <guid>https://DmitriyVlasov.ru/ru/domain/books/boysya-no-deystvuy/</guid>
      <description>&lt;p&gt;На глаза попалась книга &lt;a href=&#34;https://www.litres.ru/suzen-dzheffers/boysya-no-deystvuy-kak-prevratit-strah-iz-vraga-v-30790654/&#34;&gt;Бойся… но действуй! Как превратить страх из врага в союзника&lt;/a&gt; написанная &lt;a href=&#34;https://www.litres.ru/suzen-dzheffers/&#34;&gt;Сьюзен Джефферс&lt;/a&gt;. &lt;a href=&#34;https://www.litres.ru/suzen-dzheffers/boysya-no-deystvuy-kak-prevratit-strah-iz-vraga-v-30790654/&#34;&gt;Слушаю&lt;/a&gt; и параллельно &lt;a href=&#34;https://www.litres.ru/suzen-dzheffers/boysya-no-deystvuy-kak-prevratit-strah-iz-vraga-v-souznika-6740812/&#34;&gt;читаю&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Глава 1. Вступление</title>
      <link>https://DmitriyVlasov.ru/ru/publication/fparsec-tutorial/01-preliminaries/</link>
      <pubDate>Sat, 28 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://DmitriyVlasov.ru/ru/publication/fparsec-tutorial/01-preliminaries/</guid>
      <description>&lt;p&gt;FParsec состоит из двух библиотек: &lt;em&gt;FParsec.dll&lt;/em&gt; и &lt;em&gt;FParsecCS.dll&lt;/em&gt;. Для использования FParsec в вашем проекте, вы можете или установить из &lt;a href=&#34;http://nuget.org&#34;&gt;nuget&lt;/a&gt; (см. подробнее варианты установки &lt;a href=&#34;http://www.quanttec.com/fparsec/download-and-installation.html#nuget-packages&#34;&gt;nuget-пакетов&lt;/a&gt;&lt;!-- raw HTML omitted --&gt;en&lt;!-- raw HTML omitted --&gt;), или собрать два DLL файла FParsec из исходного кода. Самый простой способ собрать FParsec из исходного кода это использовать файлы решений Visual Studio в каталогах &lt;strong&gt;=Build/VS&lt;/strong&gt; &lt;a href=&#34;https://github.com/stephan-tolksdorf/fparsec/archive/master.zip&#34;&gt;исходного кода пакета&lt;/a&gt;, например, в каталоге &lt;strong&gt;Build/VS11&lt;/strong&gt; для Visual Studio 2012. Любой проект, который использует библиотеку FParsec должен ссылаться на оба файла DLL. Смотри подробнее в руководстве пользователя главу &lt;a href=&#34;http://www.quanttec.com/fparsec/download-and-installation.html&#34;&gt;Загрузка и установка&lt;/a&gt;&lt;!-- raw HTML omitted --&gt;en&lt;!-- raw HTML omitted --&gt;.&lt;/p&gt;
&lt;p&gt;Все типы и модули библиотеки FParsec объявлены в пространстве имен &lt;code&gt;FParsec&lt;/code&gt;. Это пространство имен содержит несколько базовых классов (например, &lt;code&gt;CharStream&lt;/code&gt; и &lt;code&gt;Reply&lt;/code&gt;) и четыре F# модуля, а именно:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.quanttec.com/fparsec/reference/primitives.html&#34;&gt;&lt;code&gt;Primitives&lt;/code&gt;&lt;/a&gt;, содержащий основные определения типов и комбинаторов синтаксического анализа,&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.quanttec.com/fparsec/reference/charparsers.html&#34;&gt;&lt;code&gt;CharParsers&lt;/code&gt;&lt;/a&gt;, содержащий синтаксические анализаторы для символов, строк, чисел и функций для применения синтаксических анализаторов для входных потоков,&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.quanttec.com/fparsec/reference/primitives.html#members.Error&#34;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt;, содержащий типы и вспомогательные функции для создания, обработки, форматирования сообщений об ошибках синтаксического анализа,&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.quanttec.com/fparsec/reference/staticmapping.html&#34;&gt;&lt;code&gt;StaticMapping&lt;/code&gt;&lt;/a&gt;, содержащий функции для создания оптимизированных функций отображения между ключами и значениями.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Во всех примерах в этом учебнике предполагается, что вы открыли пространство имен &lt;code&gt;FParsec&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fsharp&#34; data-lang=&#34;fsharp&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;open&lt;/span&gt; FParsec
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;При открытии пространства имен &lt;code&gt;FParsec&lt;/code&gt; также автоматически открываются модули &lt;code&gt;Primitives&lt;/code&gt;, &lt;code&gt;CharParsers&lt;/code&gt; и &lt;code&gt;Error&lt;/code&gt;.&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
</description>
    </item>
    
    <item>
      <title>Презентация обзор &#34;Azure Databricks&#34;</title>
      <link>https://DmitriyVlasov.ru/ru/domain/courses/databricks-101/00-intro/</link>
      <pubDate>Sun, 05 May 2019 00:00:00 +0100</pubDate>
      <guid>https://DmitriyVlasov.ru/ru/domain/courses/databricks-101/00-intro/</guid>
      <description>&lt;!-- raw HTML omitted --&gt;
</description>
    </item>
    
    <item>
      <title>Глава 2. Синтаксический анализатор числа с плавающей точкой</title>
      <link>https://DmitriyVlasov.ru/ru/publication/fparsec-tutorial/02-parsing-a-single-float/</link>
      <pubDate>Sat, 28 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://DmitriyVlasov.ru/ru/publication/fparsec-tutorial/02-parsing-a-single-float/</guid>
      <description>&lt;p&gt;Синтаксический разбор входного потока включает два этапа:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;построение синтаксического анализатора и&lt;/li&gt;
&lt;li&gt;применение анализатора к входному потоку.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Давайте начнем с простого примера: синтаксический разбор строки представляющей собой отдельное число с плавающей точкой.
В этом случае первый шаг — построение синтаксического анализатора, просто, поскольку модуль &lt;a href=&#34;http://www.quanttec.com/fparsec/reference/charparsers.html&#34;&gt;&lt;code&gt;CharParsers&lt;/code&gt;&lt;/a&gt; уже поставляется со встроенным анализатором числа с плавающей точкой:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fsharp&#34; data-lang=&#34;fsharp&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;val&lt;/span&gt; pfloat&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; Parser&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;float&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#39;&lt;/span&gt;u&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Универсальный тип &lt;code&gt;Parser&amp;lt;&#39;Result,&#39;UserState&amp;gt;&lt;/code&gt; является типом всех синтаксических анализаторов в библиотеке FParsec. Если вы перейдете по следующей гиперссылке, вы увидите, что &lt;a href=&#34;http://www.quanttec.com/fparsec/reference/primitives.html#members.Parser&#34;&gt;&lt;code&gt;Parser&lt;/code&gt;&lt;/a&gt; является &lt;a href=&#34;https://msdn.microsoft.com/ru-ru/library/dd233246.aspx&#34;&gt;синонимом&lt;/a&gt; для функционального типа. Однако, на данный момент мы не должны вдаваться в подробности типа &lt;code&gt;Parser&lt;/code&gt;. Достаточно отметить, что первый аргумент типа представляет тип результата синтаксического анализа. Итак, в рассматриваемом случае тип функции &lt;a href=&#34;http://www.quanttec.com/fparsec/reference/charparsers.html#members.pfloat&#34;&gt;&lt;code&gt;pfloat&lt;/code&gt;&lt;/a&gt; говорит нам, что, если синтаксический анализ успешно завершен, функция возвращает число с плавающей точкой типа &lt;code&gt;float&lt;/code&gt;. Мы не будем использовать пользовательское состояние синтаксического анализатора (&lt;code&gt;UserState&lt;/code&gt;) в этом уроке, так что, на данный момент, вы можете просто игнорировать второй аргумент типа.&lt;/p&gt;
&lt;p&gt;Чтобы применить синтаксический анализатор &lt;code&gt;pfloat&lt;/code&gt; к строке, мы можем использовать функцию &lt;a href=&#34;http://www.quanttec.com/fparsec/reference/charparsers.html#members.run&#34;&gt;&lt;code&gt;run&lt;/code&gt;&lt;/a&gt; из модуля &lt;code&gt;CharParsers&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fsharp&#34; data-lang=&#34;fsharp&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;val&lt;/span&gt; run&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; Parser&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#39;&lt;/span&gt;Result&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;unit&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;string&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; ParserResult&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#39;&lt;/span&gt;Result&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;unit&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Функция &lt;code&gt;run&lt;/code&gt;, простейшая из [ряда] (&lt;a href=&#34;http://www.quanttec.com/fparsec/reference/charparsers.html#interface.runparser-functions&#34;&gt;http://www.quanttec.com/fparsec/reference/charparsers.html#interface.runparser-functions&lt;/a&gt;) функций модуля &lt;code&gt;CharParsers&lt;/code&gt;, используется для запуска синтаксических анализаторов по входным данным. Другие функции позволяют вам, например, запускать синтаксические анализаторы по содержимому файла или потоку ввода-вывода (&lt;code&gt;System.IO.Stream&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;Функция &lt;code&gt;run&lt;/code&gt; применяет синтаксический анализатор, переданный в качестве первого аргумента к строке переданной в качестве второго аргумента и возвращает возвращенное синтаксическим анализатором значение в виде &lt;code&gt;ParserResult&lt;/code&gt;. Тип &lt;a href=&#34;http://www.quanttec.com/fparsec/reference/charparsers.html#members.ParserResult&#34;&gt;&lt;code&gt;ParserResult&lt;/code&gt;&lt;/a&gt; является типом размеченного объединения с двумя вариантами: &lt;code&gt;Success&lt;/code&gt; и &lt;code&gt;Failure&lt;/code&gt;. В случае, если синтаксический анализатор успешно выполнен, &lt;code&gt;ParserResult&lt;/code&gt; содержит результирующее значение, в противном случае он содержит сообщение об ошибке.&lt;/p&gt;
&lt;p&gt;Для упрощения тестирования мы напишем маленькую вспомогательную функцию, которая выводит на печать значение результата или сообщение об ошибке:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fsharp&#34; data-lang=&#34;fsharp&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; test p str &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;match&lt;/span&gt; run p str &lt;span style=&#34;color:#66d9ef&#34;&gt;with&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Success&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;result&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;_&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;_&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; printfn &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Success: %A&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; result
    &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Failure&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;errorMsg&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;_&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;_&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; printfn &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Failure: %s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; errorMsg
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Используя вспомогательную функцию, мы можем протестировать &lt;code&gt;pfloat&lt;/code&gt; выполнив:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fsharp&#34; data-lang=&#34;fsharp&#34;&gt;test pfloat &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;1.25&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;что дает в результате:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Success: 1.25
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Тестирование &lt;code&gt;pfloat&lt;/code&gt; с числовым литералом, который имеет недопустимый знак экспоненты&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fsharp&#34; data-lang=&#34;fsharp&#34;&gt;test pfloat &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;1.25E 3&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;дает сообщение об ошибке&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Failure: Error in Ln: 1 Col: 6
1.25E 3
     ^
Expecting: decimal digit
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>Подключение к кластеру</title>
      <link>https://DmitriyVlasov.ru/ru/domain/courses/databricks-101/01-connect/</link>
      <pubDate>Sun, 05 May 2019 00:00:00 +0100</pubDate>
      <guid>https://DmitriyVlasov.ru/ru/domain/courses/databricks-101/01-connect/</guid>
      <description>&lt;h2 id=&#34;видео&#34;&gt;Видео&lt;/h2&gt;
&lt;!-- raw HTML omitted --&gt;
</description>
    </item>
    
    <item>
      <title>Глава 3. Синтаксический анализатор числа с плавающей точкой в скобках</title>
      <link>https://DmitriyVlasov.ru/ru/publication/fparsec-tutorial/03-parsing-a-float-between-brackets/</link>
      <pubDate>Sat, 28 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://DmitriyVlasov.ru/ru/publication/fparsec-tutorial/03-parsing-a-float-between-brackets/</guid>
      <description>&lt;p&gt;Реализация синтаксических анализаторов с использованием библиотеки FParsec обычно означает, что высокоуровневые синтаксические анализаторы получены как комбинация низкоуровневых анализаторов. Вы начинаете с анализатора примитивов, предоставляемых библиотекой, а затем последовательно объединяете их в анализаторы более высокого уровня, пока вы, наконец, не имеете один синтаксический анализатор для полной обработки входных данных.&lt;/p&gt;
&lt;p&gt;В следующих главах мы продемонстрируем этот подход, обсуждая различные варианты примеров синтаксических анализаторов, которые построены друг из друга. В этой главе мы начнем с очень простого анализатора для числа с плавающей точкой в скобках:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fsharp&#34; data-lang=&#34;fsharp&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; str s &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pstring s
&lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; floatBetweenBrackets &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; str &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; pfloat &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; str &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;Определение &lt;code&gt;str&lt;/code&gt; и &lt;code&gt;floatBetweenBrackets&lt;/code&gt; включает в себя три библиотечные функции, которые мы ранее не рассматривали: &lt;a href=&#34;http://www.quanttec.com/fparsec/reference/charparsers.html#members.pstring&#34;&gt;&lt;code&gt;pstring&lt;/code&gt;&lt;/a&gt;, &lt;a href=&#34;http://www.quanttec.com/fparsec/reference/primitives.html#members.:62::62:..&#34;&gt;&lt;code&gt;&amp;gt;&amp;gt;.&lt;/code&gt;&lt;/a&gt; и &lt;a href=&#34;http://www.quanttec.com/fparsec/reference/primitives.html#members...:62::62:&#34;&gt;&lt;code&gt;&amp;gt;&amp;gt;.&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Функция&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fsharp&#34; data-lang=&#34;fsharp&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;val&lt;/span&gt; pstring&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;string&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; Parser&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;string&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#39;&lt;/span&gt;u&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;принимает строку в качестве аргумента и возвращает синтаксический анализатор для этой строки. Когда анализатор применяется к входному потоку он проверяет соответствуют ли символы во входном потоке строке, заданной в аргументе. Если символы полностью совпадают со строкой, анализатор поглощает их, то есть пропускает и идет дальше. В противном случае он не исполнится и не поглотит входные данные. Когда анализатор успешно обрабатывает, он также возвращает данную строку в качестве результата анализатора, но, поскольку строка константа, вы будете редко использовать этот результат.&lt;/p&gt;
&lt;p&gt;Функция &lt;code&gt;pstring&lt;/code&gt; не называется &lt;code&gt;string&lt;/code&gt;, потому что иначе она скроет встроенную в F# функцию &lt;code&gt;string&lt;/code&gt;. Как правило, имена синтаксических анализаторов в FParsec, которые конфликтуют со встроенными именами функций в F#, имеют префикс — символ &lt;code&gt;р&lt;/code&gt;. Функция &lt;a href=&#34;http://www.quanttec.com/fparsec/reference/charparsers.html#members.pfloat&#34;&gt;&lt;code&gt;pfloat&lt;/code&gt;&lt;/a&gt; еще один пример этого соглашения об именовании.&lt;/p&gt;
&lt;p&gt;Для экономии нескольких нажатий клавиш, мы сокращаем &lt;code&gt;pstring&lt;/code&gt; как &lt;code&gt;str&lt;/code&gt;. Так, например, &lt;code&gt;str &amp;quot;[&amp;quot;&lt;/code&gt; это синтаксический анализатор, который пропускает символ &lt;code&gt;&#39;[&#39;&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Бинарные операторы  &lt;code&gt;&amp;gt;&amp;gt;.&lt;/code&gt; и  &lt;code&gt;.&amp;gt;&amp;gt;&lt;/code&gt; имеет следующие типы:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fsharp&#34; data-lang=&#34;fsharp&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;val&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; Parser&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#39;&lt;/span&gt;a&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#39;&lt;/span&gt;u&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; Parser&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#39;&lt;/span&gt;b&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#39;&lt;/span&gt;u&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; Parser&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#39;&lt;/span&gt;b&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#39;&lt;/span&gt;u&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;val&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; Parser&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#39;&lt;/span&gt;a&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#39;&lt;/span&gt;u&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; Parser&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#39;&lt;/span&gt;b&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#39;&lt;/span&gt;u&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; Parser&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#39;&lt;/span&gt;a&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#39;&lt;/span&gt;u&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Как вы можете видеть из этих сигнатур, оба оператора являются комбинаторами синтаксических анализаторов, которые строят новый анализатор из двух аргументов — синтаксических анализаторов. Синтаксический анализатор &lt;code&gt;p1 &amp;gt;&amp;gt;. p2&lt;/code&gt; разбирает &lt;code&gt;p1&lt;/code&gt; и &lt;code&gt;p2&lt;/code&gt; последовательно и возвращает результат &lt;code&gt;p2&lt;/code&gt;. Синтаксический анализатор &lt;code&gt;p1 .&amp;gt;&amp;gt; p2&lt;/code&gt; также разбирает &lt;code&gt;p1&lt;/code&gt; и &lt;code&gt;p2&lt;/code&gt; последовательно, но возвращает результат &lt;code&gt;p1&lt;/code&gt; вместо &lt;code&gt;p2&lt;/code&gt;. В каждом случае точка указывает на сторону синтаксического анализатора, результат которого возвращается. Объединив оба оператора в &lt;code&gt;p1 &amp;gt;&amp;gt;. р2 .&amp;gt;&amp;gt; p3&lt;/code&gt; мы получим синтаксический анализатор, который разбирает &lt;code&gt;p1&lt;/code&gt;, &lt;code&gt;p2&lt;/code&gt; и &lt;code&gt;p3&lt;/code&gt; последовательно и возвращает результат &lt;code&gt;p2&lt;/code&gt;.&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;Следующие тесты показывают, что &lt;code&gt;floatBetweenBrackets&lt;/code&gt; разбирает правильные входные данные, как и ожидалось, и дает информативные сообщения об ошибках, когда он сталкивается с неправильными входными данными:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fsharp&#34; data-lang=&#34;fsharp&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; test floatBetweenBrackets &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;[1.0]&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;;;&lt;/span&gt;
Success&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; 1&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;0

&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; test floatBetweenBrackets &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;[]&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;;;&lt;/span&gt;
Failure&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; Error &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; Ln&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; 1 Col&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; 2
[]
 &lt;span style=&#34;color:#f92672&#34;&gt;^&lt;/span&gt;
Expecting&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; floating&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;point number

&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; test floatBetweenBrackets &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;[1.0&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;;;&lt;/span&gt;
Failure&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; Error &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; Ln&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; 1 Col&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; 5
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;1&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;0
    &lt;span style=&#34;color:#f92672&#34;&gt;^&lt;/span&gt;
Note&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; The error occurred at the &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;of&lt;/span&gt; the input stream&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;
Expecting&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;]&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;!-- raw HTML omitted --&gt;
</description>
    </item>
    
    <item>
      <title>Вопросы и ответы</title>
      <link>https://DmitriyVlasov.ru/ru/domain/courses/databricks-101/99-qa/</link>
      <pubDate>Sun, 05 May 2019 00:00:00 +0100</pubDate>
      <guid>https://DmitriyVlasov.ru/ru/domain/courses/databricks-101/99-qa/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;В этом разделе будут расположены ответы на вопросы слушателей курса.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Глава 4. Абстрактные синтаксические анализаторы</title>
      <link>https://DmitriyVlasov.ru/ru/publication/fparsec-tutorial/04-abstracting-parsers/</link>
      <pubDate>Sat, 28 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://DmitriyVlasov.ru/ru/publication/fparsec-tutorial/04-abstracting-parsers/</guid>
      <description>&lt;p&gt;Одной из самых больших сильных сторон FParsec является легкость, с которой вы можете определить свои собственные абстрактные синтаксические анализаторы.&lt;/p&gt;
&lt;p&gt;Возьмем, к примеру &lt;code&gt;floatBetweenBrackets&lt;/code&gt; из предыдущей главы. Если вы намерены также разобрать другие элементы между строк, вы можете определить свой собственный специализированный комбинатор для этой цели:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fsharp&#34; data-lang=&#34;fsharp&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; betweenStrings s1 s2 p &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; str s1 &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; p &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; str s2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Затем можно определить &lt;code&gt;floatInBrackets&lt;/code&gt; и другие синтаксические анализаторы с помощью этого комбинатора:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fsharp&#34; data-lang=&#34;fsharp&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; floatBetweenBrackets &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pfloat &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; betweenStrings &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; floatBetweenDoubleBrackets &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pfloat &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; betweenStrings &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;[[&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;]]&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;В тот момент, как вы заметите, что вам часто нужно применять синтаксический анализатор между двумя другими, вы можете пойти дальше, представив функцию &lt;code&gt;betweenStrings&lt;/code&gt; следующим образом:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fsharp&#34; data-lang=&#34;fsharp&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; between pBegin pEnd p  &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pBegin &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; p &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; pEnd
&lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; betweenStrings s1 s2 p &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; p &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; between &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;str s1&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;str s2&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;На самом деле, вам не нужно определять &lt;code&gt;between&lt;/code&gt;, потому что &lt;a href=&#34;http://www.quanttec.com/fparsec/reference/primitives.html#members.between&#34;&gt;это&lt;/a&gt; уже встроенный комбинатор FParsec.&lt;/p&gt;
&lt;p&gt;Все это, конечно, простые примеры. Но поскольку FParsec это лишь библиотека F#, а не какой-то внешний инструмент для генерации синтаксического анализатора, нет никаких ограничений на абстракции, которые можно определять. Вы можете написать функции, которые принимают любые, необходимые вам, входные данные, делают на входных данных вычисления произвольной сложности, а затем возвращают синтаксический анализатор специального назначения или комбинатор синтаксических анализаторов.&lt;/p&gt;
&lt;p&gt;Например, вы можете написать функцию, которая принимает шаблон регулярного выражения в качестве входных данных и возвращает &lt;code&gt;Parser&lt;/code&gt; для разбора входных данных, соответствующих этому шаблону. Эта функция может использовать другой синтаксический анализатор для разбора шаблона регулярного выражения в абстрактное синтаксическое дерево, а затем компилировать абстрактное синтаксическое дерево в функцию синтаксического анализатора специального назначения. Кроме того, она может построить регулярное выражение .NET из шаблона, а затем вернуть функцию синтаксического анализатора, которая использует интерфейс прикладного программирования модуля &lt;code&gt;CharStream&lt;/code&gt; библиотеки FParsec для непосредственного применения регулярного выражения к входному потоку (который является на самом деле встроенным синтаксический анализатором &lt;a href=&#34;http://www.quanttec.com/fparsec/reference/charparsers.html#members.regex&#34;&gt;&lt;code&gt;regex&lt;/code&gt;&lt;/a&gt; модуля &lt;code&gt;CharStream&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;Другой пример — расширяемые приложения синтаксического анализатора. При хранении функций синтаксического анализатора в словарях или других структурах данных и определении соответствующего расширенного протокола, вы можете разрешить подключаемым модулям динамически регистрировать новые синтаксические анализаторы или изменять существующие.&lt;/p&gt;
&lt;p&gt;Возможности действительно бесконечны. Но прежде, чем вы сможете в полной мере использовать эти возможности, вам сначала необходимо ознакомиться с основами FParsec.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Глава 5. Синтаксический анализатор списка чисел с плавающей точкой</title>
      <link>https://DmitriyVlasov.ru/ru/publication/fparsec-tutorial/05-parsing-a-list-of-floats/</link>
      <pubDate>Sat, 28 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://DmitriyVlasov.ru/ru/publication/fparsec-tutorial/05-parsing-a-list-of-floats/</guid>
      <description>&lt;p&gt;Мы уже течение трех глав обсуждаем как делать синтаксический разбор одного числа с плавающей запятой, поэтому в этот раз мы попытаемся нечто более амбициозное: синтаксический разбор списка чисел с плавающей точкой.&lt;/p&gt;
&lt;p&gt;Предположим сначала, что нам нужно, чтобы делать синтаксический разбор последовательности чисел с плавающей точкой в скобках, т.е. текст в формате &lt;a href=&#34;https://ru.wikipedia.org/wiki/%D0%A0%D0%B0%D1%81%D1%88%D0%B8%D1%80%D0%B5%D0%BD%D0%BD%D0%B0%D1%8F_%D1%84%D0%BE%D1%80%D0%BC%D0%B0_%D0%91%D1%8D%D0%BA%D1%83%D1%81%D0%B0_%E2%80%94_%D0%9D%D0%B0%D1%83%D1%80%D0%B0&#34;&gt;расширенной формы Бэкуса-Наура&lt;/a&gt; (далее РБНФ): &lt;code&gt;(&amp;quot;[&amp;quot; float &amp;quot;]&amp;quot;)*&lt;/code&gt;. Допустимые входные строки в этом формате, например: &lt;code&gt;&amp;quot;&amp;quot;&lt;/code&gt;, &lt;code&gt;&amp;quot;[1.0]&amp;quot;&lt;/code&gt;, &lt;code&gt;&amp;quot;[2][3][4]&amp;quot;&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Поскольку у нас уже есть синтаксический анализатор для числа с плавающей точкой в скобках, нам нужен только способ неоднократно применять этот синтаксический анализатор для разбора последовательности. Именно это этого предназначен комбинатор &lt;a href=&#34;http://www.quanttec.com/fparsec/reference/primitives.html#members.many&#34;&gt;&lt;code&gt;many&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fsharp&#34; data-lang=&#34;fsharp&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;val&lt;/span&gt; many&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; Parser&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#39;&lt;/span&gt;a&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#39;&lt;/span&gt;u&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; Parser&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#39;&lt;/span&gt;a &lt;span style=&#34;color:#66d9ef&#34;&gt;list&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#39;&lt;/span&gt;u&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Синтаксический анализатор &lt;code&gt;many p&lt;/code&gt; повторно применяет синтаксический анализатор &lt;code&gt;p&lt;/code&gt; до тех пор пока &lt;code&gt;p&lt;/code&gt; не потерпит неудачу, другими словами он &amp;ldquo;жадно&amp;rdquo; разбирает максимально возможное количество вхождений &lt;code&gt;p&lt;/code&gt;. Результаты &lt;code&gt;p&lt;/code&gt; возвращаются в виде списка в порядке появления.&lt;/p&gt;
&lt;p&gt;Несколько простых тестов показывают, что &lt;code&gt;many floatInBrackets&lt;/code&gt; работает, как ожидалось:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fsharp&#34; data-lang=&#34;fsharp&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; test &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;many floatBetweenBrackets&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;;;&lt;/span&gt;
Success&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; []

&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; test &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;many floatBetweenBrackets&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;[1.0]&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;;;&lt;/span&gt;
Success&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;1&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;0&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;

&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; test &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;many floatBetweenBrackets&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;[2][3][4]&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;;;&lt;/span&gt;
Success&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;2&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;0&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt; 3&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;0&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt; 4&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;0&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Если в результате &lt;em&gt;потребления входных данных&lt;/em&gt; &lt;code&gt;floatBetweenBrackets&lt;/code&gt; вызывает исключение, то комбинированный синтаксический анализатор также вызывает исключение:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fsharp&#34; data-lang=&#34;fsharp&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; test &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;many floatBetweenBrackets&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;[1][2.0E]&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;;;&lt;/span&gt;

Failure&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; Error &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; Ln&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; 1 Col&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; 9
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;1&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;2&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;0E&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
        &lt;span style=&#34;color:#f92672&#34;&gt;^&lt;/span&gt;
Expecting&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;decimal&lt;/span&gt; digit
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Обратите внимание, что &lt;code&gt;many&lt;/code&gt; также успешно исполняется для пустой последовательности. Если вы хотите, чтобы требовался, по крайней мере, один элемент во входной последовательности, вы сможете использовать вместо этого &lt;a href=&#34;http://www.quanttec.com/fparsec/reference/primitives.html#members.many1&#34;&gt;&lt;code&gt;many1&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fsharp&#34; data-lang=&#34;fsharp&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; test &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;many1 floatBetweenBrackets&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;(1)&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;;;&lt;/span&gt;
Failure&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; Error &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; Ln&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; 1 Col&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; 1
&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;1&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;^&lt;/span&gt;
Expecting&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;[&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;Если вам не нужен результат работы синтаксического анализатора и просто хотите пропустить полученный список, вы можете использовать оптимизированные комбинаторы &lt;a href=&#34;http://www.quanttec.com/fparsec/reference/primitives.html#members.skipMany&#34;&gt;&lt;code&gt;skipMany&lt;/code&gt;&lt;/a&gt; или &lt;a href=&#34;http://www.quanttec.com/fparsec/reference/primitives.html#members.skipMany1&#34;&gt;&lt;code&gt;skipMany1&lt;/code&gt;&lt;/a&gt; вместо &lt;code&gt;many&lt;/code&gt; и &lt;code&gt;many1&lt;/code&gt; .&lt;/p&gt;
&lt;p&gt;Другим часто используемым комбинатором для синтаксического разбора последовательностей является &lt;a href=&#34;http://www.quanttec.com/fparsec/reference/primitives.html#members.sepBy&#34;&gt;&lt;code&gt;sepBy&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fsharp&#34; data-lang=&#34;fsharp&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;val&lt;/span&gt; sepBy&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; Parser&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#39;&lt;/span&gt;a&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#39;&lt;/span&gt;u&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; Parser&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#39;&lt;/span&gt;b&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#39;&lt;/span&gt;u&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; Parser&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#39;&lt;/span&gt;a &lt;span style=&#34;color:#66d9ef&#34;&gt;list&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#39;&lt;/span&gt;u&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;sepBy&lt;/code&gt; принимает два параметра синтаксический анализатор «элемент» и «разделитель» и возвращает синтаксический анализатор для списка элементов. В нотации РНБН &lt;code&gt;sepBy p pSep&lt;/code&gt; может быть записана как &lt;code&gt;(p (pSep p)*)?&lt;/code&gt;, Подобно &lt;code&gt;many&lt;/code&gt;, существует &lt;a href=&#34;http://www.quanttec.com/fparsec/reference/primitives.html#interface.sepBy-parsers&#34;&gt;несколько вариантов&lt;/a&gt;&lt;!-- raw HTML omitted --&gt;en&lt;!-- raw HTML omitted --&gt; &lt;code&gt;sepBy&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;С помощью &lt;code&gt;sepBy&lt;/code&gt; мы можем сделать синтаксический разбор более реального формата списка чисел, где числа с плавающей точкой разделены запятой. Формате РНБН:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-EBNF&#34; data-lang=&#34;EBNF&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;floatList&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;float &lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;float&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;?&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Допустимыми строками в этом формате являются, например: &lt;code&gt;&amp;quot;[]&amp;quot;&lt;/code&gt;, &lt;code&gt;&amp;quot;[1.0]&amp;quot;&lt;/code&gt;, &lt;code&gt;&amp;quot;[2,3,4]&amp;quot;&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Дословной реализацией этого формата будет следующий синтаксический анализатор:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fsharp&#34; data-lang=&#34;fsharp&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; floatList &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; str &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; sepBy pfloat &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;str &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; str &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Тестирование &lt;code&gt;floatList&lt;/code&gt; с корректными строками дает ожидаемый результат:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fsharp&#34; data-lang=&#34;fsharp&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; test floatList &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;[]&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;;;&lt;/span&gt;
Success&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; []
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; test floatList &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;[1.0]&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;;;&lt;/span&gt;
Success&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;1&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;0&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; test floatList &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;[4,5,6]&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;;;&lt;/span&gt;
Success&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;4&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;0&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt; 5&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;0&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt; 6&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;0&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Тестирование с не корректными строками показывает, что &lt;code&gt;floatList&lt;/code&gt; создает полезные сообщения об ошибках:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fsharp&#34; data-lang=&#34;fsharp&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; test floatList &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;[1.0,]&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;;;&lt;/span&gt;
Failure&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; Error &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; Ln&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; 1 Col&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; 6
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;1&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;0&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
     &lt;span style=&#34;color:#f92672&#34;&gt;^&lt;/span&gt;
Expecting&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; floating&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;point number

&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; test floatList &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;[1.0,2.0&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;;;&lt;/span&gt;
Failure&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; Error &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; Ln&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; 1 Col&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; 9
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;1&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;0&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt;2&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;0
        &lt;span style=&#34;color:#f92672&#34;&gt;^&lt;/span&gt;
Note&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; The error occurred at the &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;of&lt;/span&gt; the input stream&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;
Expecting&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;,&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;or&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;]&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Глава 6. Обработка пробелов</title>
      <link>https://DmitriyVlasov.ru/ru/publication/fparsec-tutorial/06-handling-whitespace/</link>
      <pubDate>Sat, 28 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://DmitriyVlasov.ru/ru/publication/fparsec-tutorial/06-handling-whitespace/</guid>
      <description>&lt;p&gt;FParsec обрабатывает пробелы (пробелы, табуляции, новые строки и т. д.) Так же, как и любой другой ввод, поэтому наш синтаксический анализатор &lt;code&gt;floatList&lt;/code&gt; еще не умеет работать с пробелами:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fsharp&#34; data-lang=&#34;fsharp&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; test floatBetweenBrackets &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;[1.0, 2.0]&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;;;&lt;/span&gt;
Failure&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; Error &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; Ln&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; 1 Col&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; 5
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;1&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;0&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; 2&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;0&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;^&lt;/span&gt;
Expecting&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;]&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Если мы хотим, чтобы синтаксический анализатор игнорировал пробелы, нам нужно сделать это явным образом.&lt;/p&gt;
&lt;p&gt;Во-первых, нам нужно определить, что мы хотим принять в качестве пробела. Для простоты мы просто используем встроенный синтаксическим анализатором &lt;code&gt;spaces&lt;/code&gt;, который пропускает любую (возможно, пустую) последовательность символов &lt;code&gt;&#39; &#39;&lt;/code&gt;, &lt;code&gt;&#39;\t&#39;&lt;/code&gt; , &lt;code&gt;&#39;\r&#39;&lt;/code&gt; или &lt;code&gt;&#39;\n&#39;&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fsharp&#34; data-lang=&#34;fsharp&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; ws &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; spaces
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Затем нам нужно добавить синтаксический анализатор &lt;code&gt;ws&lt;/code&gt; во все места, где мы хотим игнорировать пробелы. В общем случае удобно пропустить пробелы &lt;em&gt;после&lt;/em&gt; вхождения отдельного элемента, т.е. Пропускать конечные, а не ведущие пробелы, потому что это уменьшает необходимость в обратной трассировке (подробнее см. ниже). В результате мы добавляем &lt;code&gt;ws&lt;/code&gt; в два места, чтобы пропустить любые пробелы после скобок или цифр:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fsharp&#34; data-lang=&#34;fsharp&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; str_ws s &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pstring s &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; ws
&lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; float_ws &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pfloat &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; ws
&lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; numberList &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; str_ws &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; sepBy float_ws &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;str_ws &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; str_ws &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Простой тест показывает, что &lt;code&gt;numberList&lt;/code&gt; игнорирует пробелы:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fsharp&#34; data-lang=&#34;fsharp&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; test numberList &lt;span style=&#34;color:#e6db74&#34;&gt;@&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;[ 1 ,
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;                          2 ] &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;;;&lt;/span&gt;
Success&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;1&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;0&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt; 2&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;0&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Если мы привнесем ошибку во второй строке, то увидим, что FParsec автоматически отслеживает текущее положение столбца и строки синтаксического анализа текста:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fsharp&#34; data-lang=&#34;fsharp&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; test numberList &lt;span style=&#34;color:#e6db74&#34;&gt;@&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;[ 1,
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;                         2; 3]&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;;;&lt;/span&gt;

Failure&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; Error &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; Ln&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; 2 Col&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; 27
                         2&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt; 3&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
                          &lt;span style=&#34;color:#f92672&#34;&gt;^&lt;/span&gt;
Expecting&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;,&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;or&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;]&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Наш синтаксический анализатор &lt;code&gt;numberList&lt;/code&gt; прежнему не пропускает ведущие пробелы, потому что это необязательно, когда мы сопоставляем его с другими синтаксическими анализаторами, которые пропускают все конечные пробелы. Если бы мы хотели разобрать весь поток ввода только с числами с плавающей запятой, мы могли бы использовать следующий синтаксический анализатор:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fsharp&#34; data-lang=&#34;fsharp&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; numberListFile &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ws &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; numberList &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; eof
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Синтаксический анализатор конца файла &lt;code&gt;eof&lt;/code&gt; будет генерировать ошибку, если конец потока не был достигнут. Это полезно для обеспечения того, чтобы весь входной поток был потреблен. Без анализатора &lt;code&gt;eof&lt;/code&gt; следующий тест будет работать без ошибки:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fsharp&#34; data-lang=&#34;fsharp&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; test numberListFile &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; [1, 2, 3] [4]&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;;;&lt;/span&gt;
Failure&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; Error &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; Ln&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; 1 Col&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; 12
 &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;1&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; 2&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; 3&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;4&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
           &lt;span style=&#34;color:#f92672&#34;&gt;^&lt;/span&gt;
Expecting&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;of&lt;/span&gt; input
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Глава 7. Синтаксический анализатор строковых данных</title>
      <link>https://DmitriyVlasov.ru/ru/publication/fparsec-tutorial/07-parsing-string-data/</link>
      <pubDate>Sat, 28 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://DmitriyVlasov.ru/ru/publication/fparsec-tutorial/07-parsing-string-data/</guid>
      <description>&lt;p&gt;FParsec содержит различные встроенные синтаксические анализаторы для символов, строк, чисел и пробелов. В этой главе мы представим несколько синтаксических анализаторов символов и строк. Обзор всех доступных синтаксических анализаторов см. в &lt;a href=&#34;http://www.quanttec.com/fparsec/reference/parser-overview.html&#34;&gt;руководстве пользователя&lt;/a&gt;&lt;!-- raw HTML omitted --&gt;en&lt;!-- raw HTML omitted --&gt;.&lt;/p&gt;
&lt;p&gt;Вы уже видели несколько применений синтаксического анализатора &lt;code&gt;pstring&lt;/code&gt; (сокращенно &lt;code&gt;str&lt;/code&gt; ), который просто пропускает строку определенного формата на входе. Когда синтаксический анализатор &lt;code&gt;pstring&lt;/code&gt; успешно выполнился, он также возвращает пропущенную строку в качестве результата анализатора. Следующий пример демонстрирует это:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fsharp&#34; data-lang=&#34;fsharp&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; test &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;many &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;str &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;a&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; str &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;b&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;abba&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;;;&lt;/span&gt;
Success&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;a&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;b&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;b&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;a&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;В этом примере мы так же использовали синтаксический анализатор &lt;code&gt;&amp;lt;|&amp;gt;&lt;/code&gt; для объединения двух альтернативных анализаторов. Мы обсудим этот комбинатор более подробно ниже.&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;Когда вам не нужен результат синтаксического анализатора &lt;code&gt;pstring&lt;/code&gt;, вы можете в качестве альтернативы использовать синтаксический анализатор &lt;code&gt;skipString&lt;/code&gt;, который возвращает &lt;code&gt;unit&lt;/code&gt; значение &lt;code&gt;()&lt;/code&gt; вместо строки аргумента. В приведенном примере для производительности не имеет значения, используете ли вы &lt;code&gt;pstring&lt;/code&gt; или &lt;code&gt;skipString&lt;/code&gt;, так как возвращаемая строка является константой. Однако для большинства других встроенных синтаксических анализаторов и комбинаторов вы должны предпочесть варианты с префиксом в имени &lt;code&gt;skip&lt;/code&gt;, когда вам не нужны значения результата синтаксического анализатора, поскольку они, как правило, будут быстрее. Если вы посмотрите обзор &lt;a href=&#34;http://www.quanttec.com/fparsec/reference/parser-overview.html&#34;&gt;библиотеки FParsec&lt;/a&gt;&lt;!-- raw HTML omitted --&gt;en&lt;!-- raw HTML omitted --&gt;, вы увидите варианты &lt;code&gt;skip&lt;/code&gt; для многих встроенных синтаксических анализаторов и комбинаторов.&lt;/p&gt;
&lt;p&gt;Если вы хотите проанализировать строку без учета регистра, вы можете использовать &lt;a href=&#34;http://www.quanttec.com/fparsec/reference/charparsers.html#members.pstringCI&#34;&gt;&lt;code&gt;pstringCI&lt;/code&gt;&lt;/a&gt;&lt;!-- raw HTML omitted --&gt;en&lt;!-- raw HTML omitted --&gt; и &lt;a href=&#34;http://www.quanttec.com/fparsec/reference/charparsers.html#members.skipStringCI&#34;&gt;&lt;code&gt;skipStringCI&lt;/code&gt;&lt;/a&gt;&lt;!-- raw HTML omitted --&gt;en&lt;!-- raw HTML omitted --&gt;. Например:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fsharp&#34; data-lang=&#34;fsharp&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; test &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;skipStringCI &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;lt;float&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; pfloat&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;lt;FLOAT&amp;gt;1.0&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;;;&lt;/span&gt;
Success&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; 1&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Часто нужно разбирать строковые переменные, чьи символы должны удовлетворять определенным критериям. Например, идентификаторы в языках программирования часто должны начинаться с буквы или подчеркивания, а затем необходимо продолжать буквы, цифры или символы подчеркивания. Чтобы проанализировать такой идентификатор, вы можете использовать следующий синтаксический анализатор:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fsharp&#34; data-lang=&#34;fsharp&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; identifier &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; isIdentifierFirstChar c &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; isLetter c &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; c &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;_&amp;#39;&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; isIdentifierChar c &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; isLetter c &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; isDigit c &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; c &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;_&amp;#39;&lt;/span&gt;

    many1Satisfy2L isIdentifierFirstChar isIdentifierChar &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;identifier&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; ws &lt;span style=&#34;color:#75715e&#34;&gt;// Пропускает завершающие пробелы
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Здесь мы использовали синтаксический анализатор &lt;a href=&#34;http://www.quanttec.com/fparsec/reference/charparsers.html#members.many1Satisfy2L&#34;&gt;&lt;code&gt;many1Satisfy2L&lt;/code&gt;&lt;/a&gt;&lt;!-- raw HTML omitted --&gt;en&lt;!-- raw HTML omitted --&gt;, который является одним из нескольких примитивов для синтаксического анализа строк на основе предикатов символов (т.е. функций, которые принимают символ на входе и возвращают логическое значение). Он анализирует любую последовательность одного или нескольких символов (отсюда и &lt;code&gt;many1&lt;/code&gt; в имени), чей первый символ удовлетворяет первой предикатной функции, а остальные символы удовлетворяют второму предикату (отсюда &lt;code&gt;Satisfy2&lt;/code&gt;). Строковая метка, указанная в качестве третьего аргумента (следовательно, &lt;code&gt;L&lt;/code&gt;), используется в сообщении об ошибке для описания ожидаемого ввода.&lt;/p&gt;
&lt;p&gt;Следующие тесты показывают, как работает этот анализатор:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fsharp&#34; data-lang=&#34;fsharp&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; test identifier &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;_&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;;;&lt;/span&gt;
Success&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;_&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; test identifier &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;_test1=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;;;&lt;/span&gt;
Success&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;_test1&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; test identifier &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;;;&lt;/span&gt;
Failure&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; Error &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; Ln&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; 1 Col&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; 1
1
&lt;span style=&#34;color:#f92672&#34;&gt;^&lt;/span&gt;
Expecting&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; identifier
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;Многие строковые форматы достаточно сложны, поэтому вам нужно объединить несколько примитивов символьного синтаксического анализатора и строкового синтаксического анализатора. Например, рассмотрим следующий пример анализа строки в формате РНБН:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fsharp&#34; data-lang=&#34;fsharp&#34;&gt;  normalChar&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;    any &lt;span style=&#34;color:#66d9ef&#34;&gt;char&lt;/span&gt; except &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;\&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#34;&amp;#39;&lt;/span&gt;

  escapedChar&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;   &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;\\&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;\\&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#34;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;n&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;r&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;t&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;

  stringLiteral&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#34;&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt; normalChar &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; escapedChar &lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#34;&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Прямой перевод этой грамматики в FParsec выглядит так:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fsharp&#34; data-lang=&#34;fsharp&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; stringLiteral &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;
  &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; normalChar &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 
    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; anyCharExcept c &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; c &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;\\&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; c &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#34;&amp;#39;&lt;/span&gt;
    satisfy anyCharExcept
  &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; escapedChar &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 
    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; unescape c &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 
      &lt;span style=&#34;color:#66d9ef&#34;&gt;match&lt;/span&gt; c &lt;span style=&#34;color:#66d9ef&#34;&gt;with&lt;/span&gt;
      &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;n&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;\n&amp;#39;&lt;/span&gt;
      &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;r&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;\r&amp;#39;&lt;/span&gt;
      &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;t&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;\t&amp;#39;&lt;/span&gt;
      &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; c   &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; c
    pstring &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\\&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;anyOf &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\\&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;nrt&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; unescape&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
  &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; quote &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pstring &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; 
  between quote quote &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt; manyChars &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;normalChar &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; escapedChar&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;В этом примере появилось несколько новых функций библиотеки. Давайте рассмотрим их подробнее:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Функция &lt;a href=&#34;http://www.quanttec.com/fparsec/reference/charparsers.html#members.satisfy&#34;&gt;&lt;code&gt;satisfy&lt;/code&gt;&lt;/a&gt;&lt;!-- raw HTML omitted --&gt;en&lt;!-- raw HTML omitted --&gt; разбирает любой символ, который удовлетворяет заданному в параметрах предикату.&lt;/li&gt;
&lt;li&gt;Функция &lt;a href=&#34;http://www.quanttec.com/fparsec/reference/charparsers.html#members.anyOf&#34;&gt;&lt;code&gt;anyOf&lt;/code&gt;&lt;/a&gt;&lt;!-- raw HTML omitted --&gt;en&lt;!-- raw HTML omitted --&gt; разбирает любой символ, содержащийся в строке аргумента.&lt;/li&gt;
&lt;li&gt;Комбинатор конвейера &lt;a href=&#34;http://www.quanttec.com/fparsec/reference/primitives.html#members.:124::62::62:&#34;&gt;&lt;code&gt;|&amp;gt;&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;!-- raw HTML omitted --&gt;en&lt;!-- raw HTML omitted --&gt; применяет функцию с правой стороны (&lt;code&gt;unescape&lt;/code&gt;) к результату синтаксического анализатора с левой стороны (&lt;code&gt;anyOf &amp;quot;\\nrt\&amp;quot;&amp;quot;&lt;/code&gt;).&lt;/li&gt;
&lt;li&gt;Комбинатор выбора &lt;a href=&#34;http://www.quanttec.com/fparsec/reference/primitives.html#members.:60::124::62:&#34;&gt;&lt;code&gt;&amp;lt;|&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;!-- raw HTML omitted --&gt;en&lt;!-- raw HTML omitted --&gt; применяет синтаксический анализатор с правой стороны, если синтаксический анализатор с левой стороны терпит неудачу, так что &lt;code&gt;normalChar &amp;lt;|&amp;gt; escapedChar&lt;/code&gt; может анализировать как обычные, так и экранированные символы. (Мы обсудим этот комбинатор более подробно через две главы далее).&lt;/li&gt;
&lt;li&gt;Функция &lt;a href=&#34;http://www.quanttec.com/fparsec/reference/charparsers.html#members.manyChars&#34;&gt;&lt;code&gt;manyChars&lt;/code&gt;&lt;/a&gt;&lt;!-- raw HTML omitted --&gt;en&lt;!-- raw HTML omitted --&gt; анализирует последовательность символов с заданным символьным синтаксическим анализатором и возвращает его как строку.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Давайте протестируем синтаксический анализатор &lt;code&gt;stringLiteral&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fsharp&#34; data-lang=&#34;fsharp&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; test stringLiteral &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;abc&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;;;&lt;/span&gt;
Success&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;abc&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; test stringLiteral &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;abc&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\\&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;def&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\\&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\\&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;ghi&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;;;&lt;/span&gt;
Success&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;abc&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;def&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;\&lt;/span&gt;ghi&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;gt; test stringLiteral &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;\&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;abc&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\\&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;def&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;;;&lt;/span&gt;
Failure&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; Error &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; Ln&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; 1 Col&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; 6
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;abc&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;\&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;def&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
     &lt;span style=&#34;color:#f92672&#34;&gt;^&lt;/span&gt;
Expecting&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; any &lt;span style=&#34;color:#66d9ef&#34;&gt;char&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;‘&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;\&lt;/span&gt;nrt&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;’
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Вместо разбора строкового литерала посимвольно мы могли бы также разобрать его построчно:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fsharp&#34; data-lang=&#34;fsharp&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; stringLiteral2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;
  &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; normalString &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 
    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; anyCharExcept c &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; c &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;\\&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; c &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#34;&amp;#39;&lt;/span&gt;
    many1Satisfy anyCharExcept
  &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; escapedChar &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 
    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; unescape c &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 
      &lt;span style=&#34;color:#66d9ef&#34;&gt;match&lt;/span&gt; c &lt;span style=&#34;color:#66d9ef&#34;&gt;with&lt;/span&gt;
      &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;n&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;\n&amp;#39;&lt;/span&gt;
      &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;r&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;\r&amp;#39;&lt;/span&gt;
      &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;t&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;\t&amp;#39;&lt;/span&gt;
      &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; c   &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; c
    pstring &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\\&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;anyOf &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\\&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;nrt&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; unescape&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
  &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; quote &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pstring &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; 
  between quote quote &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt; manyStrings &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;normalString &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; escapedChar&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Здесь мы использовали комбинатор &lt;a href=&#34;http://www.quanttec.com/fparsec/reference/charparsers.html#members.manyStrings&#34;&gt;&lt;code&gt;manyStrings&lt;/code&gt;&lt;/a&gt;&lt;!-- raw HTML omitted --&gt;en&lt;!-- raw HTML omitted --&gt; , который анализирует последовательность строк с заданным синтаксическим анализатором строк и возвращает объединённую строку.&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;Синтаксический анализ строки с использованием оптимизированного синтаксического анализатора, такого как &lt;code&gt;many1Satisfy&lt;/code&gt;, обычно немного быстрее, чем синтаксический анализ его с помощью &lt;code&gt;manyChars&lt;/code&gt; и &lt;code&gt;satisfy&lt;/code&gt;. В этом случае мы можем оптимизировать наш синтаксический анализатор еще немного - как только мы поймем, что два нормальных фрагмента строк должны быть разделены хотя бы одним экранированным символом:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fsharp&#34; data-lang=&#34;fsharp&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; stringLiteral3 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;
  &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; normalString &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 
    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; anyCharExcept c &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; c &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;\\&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; c &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#34;&amp;#39;&lt;/span&gt;
    manySatisfy anyCharExcept
  &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; escapedChar &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 
    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; unescape c &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 
      &lt;span style=&#34;color:#66d9ef&#34;&gt;match&lt;/span&gt; c &lt;span style=&#34;color:#66d9ef&#34;&gt;with&lt;/span&gt;
      &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;n&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;\n&amp;#39;&lt;/span&gt;
      &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;r&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;\r&amp;#39;&lt;/span&gt;
      &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;t&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;\t&amp;#39;&lt;/span&gt;
      &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; c   &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; c
    pstring &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\\&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;anyOf &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\\&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;nrt&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; unescape&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
  &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; quote &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pstring &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; 
  between quote quote &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt; stringsSepBy normalString escapedChar&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Синтаксический анализатор &lt;a href=&#34;http://www.quanttec.com/fparsec/reference/charparsers.html#members.stringsSepBy&#34;&gt;&lt;code&gt;stringsSepBy&lt;/code&gt;&lt;/a&gt;&lt;!-- raw HTML omitted --&gt;en&lt;!-- raw HTML omitted --&gt; анализирует последовательность строк (первый аргумент), разделенных другими строками (второй аргумент). Он возвращает все разобранные строки, включая строки разделителя, в виде новой объединённой строки.&lt;/p&gt;
&lt;p&gt;Обратите внимание, что &lt;code&gt;stringLiteral3&lt;/code&gt; использует &lt;a href=&#34;http://www.quanttec.com/fparsec/reference/charparsers.html#members.many1Satisfy&#34;&gt;&lt;code&gt;manySatisfy&lt;/code&gt;&lt;/a&gt;&lt;!-- raw HTML omitted --&gt;en&lt;!-- raw HTML omitted --&gt; вместо &lt;a href=&#34;http://www.quanttec.com/fparsec/reference/charparsers.html#members.many1Satisfy&#34;&gt;&lt;code&gt;many1Satisfy&lt;/code&gt;&lt;/a&gt;&lt;!-- raw HTML omitted --&gt;en&lt;!-- raw HTML omitted --&gt; в своем определении &lt;code&gt;normalString&lt;/code&gt;, так что он может анализировать экранированные символы, которые не разделены обычными символами. Это приведет к бесконечному циклу, потому что &lt;code&gt;escapedChar&lt;/code&gt; не будет исполнено при отсутствии входных данных.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Глава 8. Использование последовательности синтаксических анализаторов</title>
      <link>https://DmitriyVlasov.ru/ru/publication/fparsec-tutorial/08-sequentially-applying-parsers/</link>
      <pubDate>Sat, 28 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://DmitriyVlasov.ru/ru/publication/fparsec-tutorial/08-sequentially-applying-parsers/</guid>
      <description>&lt;p&gt;Всякий раз, когда вам нужно применять несколько синтаксических анализаторов в последовательности, а нужен только результат одного из них, подходящая комбинация &lt;a href=&#34;http://www.quanttec.com/fparsec/reference/primitives.html#members.:62::62:..&#34;&gt;&lt;code&gt;&amp;gt;&amp;gt;.&lt;/code&gt;&lt;/a&gt;&lt;!-- raw HTML omitted --&gt;en&lt;!-- raw HTML omitted --&gt; и &lt;a href=&#34;http://www.quanttec.com/fparsec/reference/primitives.html#members...:62::62:&#34;&gt;&lt;code&gt;.&amp;gt;&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;!-- raw HTML omitted --&gt;en&lt;!-- raw HTML omitted --&gt; операторов поможет выполнить эту работу. Однако этих комбинаторов не хватит, если вам нужен результат более чем одного из задействованных синтаксических анализаторов. В этом случае вы можете использовать &lt;a href=&#34;http://www.quanttec.com/fparsec/reference/primitives.html#members.pipe2&#34;&gt;&lt;code&gt;pipe2&lt;/code&gt;&lt;/a&gt;&lt;!-- raw HTML omitted --&gt;en&lt;!-- raw HTML omitted --&gt;, &amp;hellip;, &lt;a href=&#34;http://www.quanttec.com/fparsec/reference/primitives.html#members.pipe5&#34;&gt;&lt;code&gt;pipe5&lt;/code&gt;&lt;/a&gt;&lt;!-- raw HTML omitted --&gt;en&lt;!-- raw HTML omitted --&gt;, которые последовательно применяют несколько синтаксических анализаторов и передают все отдельные результаты функции, которая вычисляет итоговый результат.&lt;/p&gt;
&lt;p&gt;Например, с комбинатором &lt;a href=&#34;http://www.quanttec.com/fparsec/reference/primitives.html#members.pipe2&#34;&gt;&lt;code&gt;pipe2&lt;/code&gt;&lt;/a&gt;&lt;!-- raw HTML omitted --&gt;en&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fsharp&#34; data-lang=&#34;fsharp&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;val&lt;/span&gt; pipe2&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; Parser&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#39;&lt;/span&gt;a&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#39;&lt;/span&gt;u&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; Parser&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#39;&lt;/span&gt;b&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#39;&lt;/span&gt;u&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#39;&lt;/span&gt;a &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; b &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#39;&lt;/span&gt;c&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; Parser&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#39;&lt;/span&gt;c&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#39;&lt;/span&gt;u&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Вы можете построить синтаксический анализатор &lt;code&gt;pipe2 p1 p2 f&lt;/code&gt; который последовательно применяет два синтаксических анализатора &lt;code&gt;p1&lt;/code&gt; и &lt;code&gt;p2&lt;/code&gt;, а затем возвращает результат применения функции &lt;code&gt;f x1 x2&lt;/code&gt;, где &lt;code&gt;x1&lt;/code&gt; и &lt;code&gt;x2&lt;/code&gt; - результаты, возвращаемые &lt;code&gt;p1&lt;/code&gt; и &lt;code&gt;p2&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;В следующем примере мы используем &lt;a href=&#34;http://www.quanttec.com/fparsec/reference/primitives.html#members.pipe2&#34;&gt;&lt;code&gt;pipe2&lt;/code&gt;&lt;/a&gt;&lt;!-- raw HTML omitted --&gt;en&lt;!-- raw HTML omitted --&gt; для синтаксического анализа произведения из двух чисел:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fsharp&#34; data-lang=&#34;fsharp&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; product &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 
  pipe2 float_ws &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;str_ws &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; float_ws&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;fun&lt;/span&gt; x y &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; y&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fsharp&#34; data-lang=&#34;fsharp&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; test product &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;3 * 5&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;;;&lt;/span&gt;
Success&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; 15&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;pipe2-5&lt;/code&gt; особенно полезны для построения объектов Абстрактного синтаксического дерева (далее АСТ). В следующем примере мы используем &lt;a href=&#34;http://www.quanttec.com/fparsec/reference/primitives.html#members.pipe3&#34;&gt;&lt;code&gt;pipe3&lt;/code&gt;&lt;/a&gt;&lt;!-- raw HTML omitted --&gt;en&lt;!-- raw HTML omitted --&gt; для анализа определения строковой константы в объекте &lt;code&gt;StringConstant&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fsharp&#34; data-lang=&#34;fsharp&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;type&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;StringConstant&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; StringConstant &lt;span style=&#34;color:#66d9ef&#34;&gt;of&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;string&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;string&lt;/span&gt;

&lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; stringConstant &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 
  pipe3 identifier &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;str_ws &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; stringLiteral &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;fun&lt;/span&gt; id &lt;span style=&#34;color:#f92672&#34;&gt;_&lt;/span&gt; str &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; StringConstant&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;id&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; str&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fsharp&#34; data-lang=&#34;fsharp&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; test stringConstant &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;myString = &lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;stringValue&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;;;&lt;/span&gt;
Success&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; StringConstant &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;myString&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;stringValue&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Если вы просто хотите вернуть проанализированные значения в виде кортежа, вы можете использовать предопределенные функции &lt;a href=&#34;http://www.quanttec.com/fparsec/reference/primitives.html#members.tuple2&#34;&gt;&lt;code&gt;tuple2&lt;/code&gt;&lt;/a&gt;&lt;!-- raw HTML omitted --&gt;en&lt;!-- raw HTML omitted --&gt;&amp;hellip;&lt;a href=&#34;http://www.quanttec.com/fparsec/reference/primitives.html#members.tuple2&#34;&gt;&lt;code&gt;tuple5&lt;/code&gt;&lt;/a&gt;&lt;!-- raw HTML omitted --&gt;en&lt;!-- raw HTML omitted --&gt;. Например, &lt;code&gt;tuple2 p1 p2&lt;/code&gt; эквивалентен  &lt;code&gt;pipe2 p1 p2 ( fun x1 x2 -&amp;gt; ( x1 , x2 ) )&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Синтаксический анализатор &lt;a href=&#34;http://www.quanttec.com/fparsec/reference/primitives.html#members.tuple2&#34;&gt;&lt;code&gt;tuple2&lt;/code&gt;&lt;/a&gt;&lt;!-- raw HTML omitted --&gt;en&lt;!-- raw HTML omitted --&gt; также доступен в виде комбинатора &lt;a href=&#34;http://www.quanttec.com/fparsec/reference/primitives.html#members...:62::62:..&#34;&gt;&lt;code&gt;.&amp;gt;&amp;gt;.&lt;/code&gt;&lt;/a&gt;&lt;!-- raw HTML omitted --&gt;en&lt;!-- raw HTML omitted --&gt;. Так что вы можете написать  &lt;code&gt;p1 .&amp;gt;&amp;gt;. p2&lt;/code&gt; вместо &lt;code&gt;tuple2 p1 p2&lt;/code&gt;. В следующем примере мы проанализируем пару разделенных запятыми чисел с этим оператором:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fsharp&#34; data-lang=&#34;fsharp&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; test &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;float_ws &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;str_ws &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; float_ws&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;123, 456&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;;;&lt;/span&gt;
Success&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;123&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;0&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; 456&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;0&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Надеемся, что вы уже интуитивно понимаете шаблон записи &lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt;&lt;em&gt;одна-или-две-точки&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Если вам нужен синтаксический анализатор &lt;code&gt;pipe&lt;/code&gt; или &lt;code&gt;tuple&lt;/code&gt; более чем c пятью аргументами, вы можете легко построить его с помощью существующих. Например, у вас есть идея: определить синтаксический анализатор &lt;code&gt;pipe7&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fsharp&#34; data-lang=&#34;fsharp&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; pipe7 p1 p2 p3 p4 p5 p6 p7 f &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;
    pipe4 p1 p2 p3 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;tuple4 p4 p5 p6 p7&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
          &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;fun&lt;/span&gt; x1 x2 x3 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;x4&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; x5&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; x6&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; x7&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; f x1 x2 x3 x4 x5 x6 x7&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Глава 9. Использование альтернативных синтаксических анализов</title>
      <link>https://DmitriyVlasov.ru/ru/publication/fparsec-tutorial/09-parsing-alternatives/</link>
      <pubDate>Sat, 28 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://DmitriyVlasov.ru/ru/publication/fparsec-tutorial/09-parsing-alternatives/</guid>
      <description>&lt;p&gt;В главе 7 &amp;ldquo;&lt;a href=&#34;../07-parsing-string-data&#34;&gt;Синтаксический анализатор строковых данных&lt;/a&gt;&amp;rdquo; мы вкратце представили комбинатор выбора &lt;a href=&#34;http://www.quanttec.com/fparsec/reference/primitives.html#members.:60::124::62:&#34;&gt;&lt;code&gt;&amp;lt;|&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;!-- raw HTML omitted --&gt;en&lt;!-- raw HTML omitted --&gt; :&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fsharp&#34; data-lang=&#34;fsharp&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;val&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; Parser&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#39;&lt;/span&gt;a&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#39;&lt;/span&gt;u&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; Parser&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#39;&lt;/span&gt;a&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#39;&lt;/span&gt;u&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; Parser&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#39;&lt;/span&gt;a&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt;u&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Этот комбинатор позволяет вам поддерживать несколько альтернативных вариантов.&lt;/p&gt;
&lt;p&gt;Например, в &lt;a href=&#34;../07-parsing-string-data&#34;&gt;главе 7&lt;/a&gt; мы использовали &lt;code&gt;&amp;lt;|&amp;gt;&lt;/code&gt; для объединения синтаксического анализатора для неэкранированных символов и анализатора для экранированных символов в новый анализатор, который поддерживает оба варианта: &lt;code&gt;normalChar &amp;lt;|&amp;gt; escapedChar&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Другим примером, показывающим, как работает &lt;code&gt;&amp;lt;|&amp;gt;&lt;/code&gt; является следующий синтаксический анализатор для разбора строкового представления булевых значений:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fsharp&#34; data-lang=&#34;fsharp&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; boolean &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 
  &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;stringReturn &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;stringReturn &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;false&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;false&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Здесь мы использовали синтаксический анализатор &lt;a href=&#34;http://www.quanttec.com/fparsec/reference/charparsers.html#members.stringReturn&#34;&gt;&lt;code&gt;stringReturn&lt;/code&gt;&lt;/a&gt;&lt;!-- raw HTML omitted --&gt;en&lt;!-- raw HTML omitted --&gt;, который берет в качестве первого аргумента строку, и, в случае успеха, возвращает значение, указанное в качестве второго аргумента.&lt;/p&gt;
&lt;p&gt;Протестируем синтаксический анализатор &lt;code&gt;boolean&lt;/code&gt; на примерах:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fsharp&#34; data-lang=&#34;fsharp&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; test boolean &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;false&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;;;&lt;/span&gt;
Success&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;false&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; test boolean &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;;;&lt;/span&gt;
Success&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; test boolean &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;tru&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;;;&lt;/span&gt;
Failure&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; Error &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; Ln&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; 1 Col&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; 1
tru
&lt;span style=&#34;color:#f92672&#34;&gt;^&lt;/span&gt;
Expecting&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;false&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;or&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Поведение комбинатора &lt;code&gt;&amp;lt;|&amp;gt;&lt;/code&gt; имеет две важные характеристики:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;|&amp;gt;&lt;/code&gt; Правая часть синтаксического анализатора выполняется, если синтаксический анализатор левой части завершился с не фатальной ошибкой и без изменения состояния. Комбинатор не реализует правило самого длинного совпадения.&lt;/li&gt;
&lt;li&gt;Однако, комбинатор пытается использовать правый синтаксический анализатор, если левый синтаксический анализатор при завершении вызывает &lt;em&gt;нет данных для обработки&lt;/em&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Следствием второго пункта является то, что следующий тест завершился неудачно, потому что синтаксический анализатор в левой части &lt;code&gt;&amp;lt;|&amp;gt;&lt;/code&gt; получает пробелы перед сбоем:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fsharp&#34; data-lang=&#34;fsharp&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; test &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;ws &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; str &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;a&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;ws &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; str &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;b&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; b&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;;;&lt;/span&gt;
Failure&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; Error &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; Ln&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; 1 Col&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; 2
 b
 &lt;span style=&#34;color:#f92672&#34;&gt;^&lt;/span&gt;
Expecting&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;a&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;К счастью, мы можем легко исправить этот синтаксический анализатор, выделив &lt;code&gt;ws&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fsharp&#34; data-lang=&#34;fsharp&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; test &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;ws &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;str &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;a&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; str &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;b&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; b&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;;;&lt;/span&gt;
Success&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;b&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Если вам интересно, почему &lt;code&gt;&amp;lt;|&amp;gt;&lt;/code&gt; ведет себя таким образом и как вы можете обрабатывать ситуации, в которых вам нужно чтобы  &lt;code&gt;&amp;lt;|&amp;gt;&lt;/code&gt; пытался исполнять альтернативный синтаксический анализатор, даже если первый синтаксический анализатор вызвал ошибку после обработки входных данных смотрите главы &lt;a href=&#34;http://www.quanttec.com/fparsec/users-guide/parsing-alternatives.html&#34;&gt;5.6 Parsing alternatives&lt;/a&gt; и &lt;a href=&#34;http://www.quanttec.com/fparsec/users-guide/looking-ahead-and-backtracking.html&#34;&gt;5.7 Looking ahead and backtracking&lt;/a&gt; в руководстве пользователя.&lt;/p&gt;
&lt;p&gt;Если вы хотите использовать более двух альтернативных синтаксических анализаторов, вы можете комбинировать несколько операторов &lt;code&gt;&amp;lt;|&amp;gt;&lt;/code&gt;, например, в &lt;code&gt;p1 &amp;lt;|&amp;gt; p2 &amp;lt;|&amp;gt; p3 &amp;lt;|&amp;gt; ...&lt;/code&gt;, или вы можете использовать комбинатор &lt;a href=&#34;http://www.quanttec.com/fparsec/reference/primitives.html#members.choice&#34;&gt;&lt;code&gt;choice&lt;/code&gt;&lt;/a&gt;&lt;!-- raw HTML omitted --&gt;en&lt;!-- raw HTML omitted --&gt;, который принимает последовательность синтаксических анализаторов в качестве аргумента, например &lt;code&gt;choice [ p1 ; p2 ; p3 ; ... ]&lt;/code&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Глава 10. Ограничение значений F#</title>
      <link>https://DmitriyVlasov.ru/ru/publication/fparsec-tutorial/10-fsharps-value-restriction/</link>
      <pubDate>Sat, 28 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://DmitriyVlasov.ru/ru/publication/fparsec-tutorial/10-fsharps-value-restriction/</guid>
      <description>&lt;p&gt;Когда вы начинаете писать собственные синтаксические анализаторы с помощью библиотеки FParsec или пытаетесь скомпилировать некоторые отдельные фрагменты кода из учебника, вы столкнетесь с особенностями компилятора, которые часто вызывают некоторые затруднения среди новых пользователей F# и FParsec: ограничение значений. В этом разделе мы объясним ограничение значений и способ его обработки в ваших программах FParsec.&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;Ограничение значений F# является причиной того, что следующий фрагмент кода не компилируется&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fsharp&#34; data-lang=&#34;fsharp&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;open&lt;/span&gt; FParsec
&lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; p &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pstring &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;test&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Но следующий фрагмент скомпилирован без проблем (Предполагаем, что вы ссылались на две библиотеки FParsec):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fsharp&#34; data-lang=&#34;fsharp&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;open&lt;/span&gt; FParsec
&lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; p &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pstring &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;test&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
run p &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;input&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Ошибка компилятора, сгенерированная для первого примера будет примерно следующая:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fsharp&#34; data-lang=&#34;fsharp&#34;&gt;error FS0030&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; Value restriction&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;
The value &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;p&amp;#39;&lt;/span&gt; has been inferred &lt;span style=&#34;color:#66d9ef&#34;&gt;to&lt;/span&gt; have generic &lt;span style=&#34;color:#66d9ef&#34;&gt;type&lt;/span&gt;
    &lt;span style=&#34;color:#a6e22e&#34;&gt;val&lt;/span&gt; p &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; Parser&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;string&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;_&lt;/span&gt;a&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;
Either make the arguments &lt;span style=&#34;color:#66d9ef&#34;&gt;to&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;p&amp;#39;&lt;/span&gt; explicit &lt;span style=&#34;color:#f92672&#34;&gt;or&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; you &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;not&lt;/span&gt; intend &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; it &lt;span style=&#34;color:#66d9ef&#34;&gt;to&lt;/span&gt; be generic&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; add a &lt;span style=&#34;color:#66d9ef&#34;&gt;type&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;annotation&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Когда вы работаете с библиотекой FParsec, вы рано или поздно увидите это или похожие сообщения об ошибке, в частности, если вы работаете в интерактивной консоли. К счастью для ошибок такого рода, как правило, легко найти обходной путь.&lt;/p&gt;
&lt;p&gt;Проблема с первым примером выше заключается в том, что компилятор F# выводит значение &lt;code&gt;p&lt;/code&gt; как имеющее неопределенное значение общего типа, хотя F# не допускает значение общего типа в этой ситуации. Функция &lt;code&gt;pstring&lt;/code&gt; возвращает значение типа &lt;code&gt;Parser&amp;lt;string, &#39;u&amp;gt;&lt;/code&gt;, где &lt;code&gt;&#39;u&lt;/code&gt; - параметр типа представляющий собой пользовательское состояние типа &lt;code&gt;CharStream&lt;/code&gt;. Так как в первом примере выше, нет значений содержащих этот параметр типа, компилятор указывает тип результата как &lt;code&gt;Parser&amp;lt;string, &#39;_a&amp;gt;&lt;/code&gt; для синтаксического анализатора &lt;code&gt;p&lt;/code&gt;, где &lt;code&gt;&#39;_a&lt;/code&gt; представляет не определенный параметр общего типа.&lt;/p&gt;
&lt;p&gt;Во втором примере эта проблема не возникает, поскольку использование &lt;code&gt;p&lt;/code&gt; в качестве первого аргумента функции &lt;code&gt;run&lt;/code&gt; определяет тип пользовательского состояния. Поскольку &lt;code&gt;run&lt;/code&gt; принимает только синтаксические анализаторы типа &lt;code&gt;Parser&amp;lt;&#39;t, unit&amp;gt;&lt;/code&gt;, компилятор выводит определенный тип &lt;code&gt;Parser&amp;lt;string, unit&amp;gt;&lt;/code&gt; для &lt;code&gt;p&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;В примере ниже предлагается два способа обработки ограничения значений в программах FParsec:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Либо убедитесь, что тип значения синтаксического анализатора ограничен не обобщенным типом путем дальнейшего использования значения этого синтаксического анализатора &lt;em&gt;в одном блоке компиляции&lt;/em&gt;,&lt;/li&gt;
&lt;li&gt;Или предоставьте явную аннотацию типа, чтобы вручную ограничивать тип значения синтаксического анализатора (обычно для всего модуля синтаксического анализа достаточно нескольких аннотаций типа в ключевых точках).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Часто бывает удобно определить аббревиатуры типа следующего вида:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fsharp&#34; data-lang=&#34;fsharp&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;type&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;UserState&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;unit&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;// Конечно не обязательно должен быть unit типом
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;type&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Parser&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#39;&lt;/span&gt;t&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Parser&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;#39;&lt;/span&gt;t&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; UserState&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;С такими аббревиатурами, типы аннотаций становятся такими же простыми, как&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fsharp&#34; data-lang=&#34;fsharp&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; p &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; Parser&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;_&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pstring &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;test&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Конечно, ограничение значения типа синтаксического анализатора до определенного типа - это только решение, если вам действительно не нужен общий тип. Если вам нужен общий тип, вам придется применять другие методы, как это описано, например, в документации по языку &lt;a href=&#34;https://docs.microsoft.com/ru-ru/dotnet/fsharp/language-reference/generics/automatic-generalization&#34;&gt;F#&lt;/a&gt; или в статье &lt;a href=&#34;http://blogs.msdn.com/b/mulambda/archive/2010/05/01/value-restriction-in-f.aspx&#34;&gt;Finer Points of F# Value Restriction&lt;/a&gt;&lt;!-- raw HTML omitted --&gt;en&lt;!-- raw HTML omitted --&gt; в блоге Дмитрия Ломова. Однако значения &lt;code&gt;Parser&lt;/code&gt; FParsec (непараметрические функции синтаксического анализатора) обычно используются только в контексте конкретного использования синтаксического анализатора с фиксированным типом состояния пользователя. В этой ситуации ограничение типа действительно является подходящей мерой, чтобы избежать ошибок ограничения значения.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Глава 11. Синтаксический анализ JSON</title>
      <link>https://DmitriyVlasov.ru/ru/publication/fparsec-tutorial/11-parsing-json/</link>
      <pubDate>Sat, 28 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://DmitriyVlasov.ru/ru/publication/fparsec-tutorial/11-parsing-json/</guid>
      <description>&lt;p&gt;Now that we have discussed the basics of FParsec we are well prepared to work through a real world parser example: a JSON parser.&lt;/p&gt;
&lt;p&gt;JSON (JavaScript Object Notation) is a text-based data interchange format with a simple and lightweight syntax. You can find descriptions of the syntax on &lt;a href=&#34;http://json.org&#34;&gt;json.org&lt;/a&gt; and in &lt;a href=&#34;http://www.ietf.org/rfc/rfc4627.txt&#34;&gt;RFC 4626&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In many applications one only has to deal with JSON files describing one particular kind of object. In such a context it sometimes can be appropriate to write a specialized parser just for that specific kind of JSON file. In this tutorial, however, we will follow a more general approach. We will implement a parser that can parse any general JSON file into an AST, i.e. an intermediate data structure describing the contents of the file. Applications can then conveniently query this data structure and extract the information they need. This is an approach comparable to that of XML parsers which build a data structure describing the document tree of an XML document. The great advantage of this approach is that the JSON parser itself becomes reusable and the document specific parsing logic can be expressed in the form of simple functions processing the AST of the JSON document.&lt;/p&gt;
&lt;p&gt;The natural way to implement an AST in F# is with the help of a discriminated union type. If you look at the &lt;a href=&#34;http://json.org&#34;&gt;JSON specification&lt;/a&gt;, you can see that a JSON value can be a string, a number, a boolean, null, a comma-separated list of values in square brackets, or an object with a sequence of key-value pairs in curly brackets.&lt;/p&gt;
&lt;p&gt;In our parser we will use the following union type to represent JSON values:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fsharp&#34; data-lang=&#34;fsharp&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;type&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Json&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; JString &lt;span style=&#34;color:#66d9ef&#34;&gt;of&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;string&lt;/span&gt;
          &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; JNumber &lt;span style=&#34;color:#66d9ef&#34;&gt;of&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;float&lt;/span&gt;
          &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; JBool   &lt;span style=&#34;color:#66d9ef&#34;&gt;of&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;bool&lt;/span&gt;
          &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; JNull
          &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; JList   &lt;span style=&#34;color:#66d9ef&#34;&gt;of&lt;/span&gt; Json &lt;span style=&#34;color:#66d9ef&#34;&gt;list&lt;/span&gt;
          &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; JObject &lt;span style=&#34;color:#66d9ef&#34;&gt;of&lt;/span&gt; Map&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;string&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; Json&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Here we&amp;rsquo;ve chosen the F# &lt;code&gt;list&lt;/code&gt; type to represent a sequence of values and the &lt;code&gt;Map&lt;/code&gt; type to represent a sequence of key-value pairs, because these types are particularly convenient to process in F#.[fn If you need to parse huge sequences and objects, it might be more appropriate to use an array and dictionary for JList and JObject respectively.] Note that the &lt;code&gt;Json&lt;/code&gt; type is recursive, since both &lt;code&gt;JList&lt;/code&gt; and &lt;code&gt;JObject&lt;/code&gt; values can themselves contain &lt;code&gt;Json&lt;/code&gt; values. Our parser will have to reflect this recursive structure.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;###Tip
If you&amp;rsquo;re new to FParsec and have a little time, it would be a good exercise to try to implement the JSON parser on your own (with the help of the reference documentation). This tutorial already covered almost everything you need and the JSON grammar is simple enough that this shouldn&amp;rsquo;t take too much time. Of course, you can always peek at the implementation below if you get stuck.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;We start the actual parser implementation by covering the simple &lt;code&gt;null&lt;/code&gt; and boolean cases:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fsharp&#34; data-lang=&#34;fsharp&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; jnull &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; stringReturn &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; JNull
&lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; jool &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;stringReturn &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;JBool &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;stringReturn &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;false&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;JBool &lt;span style=&#34;color:#66d9ef&#34;&gt;false&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Handling the number case is just as simple, because the JSON number format is based on the typical floating-point number format used in many programming languages and hence can be parsed with FParsec&amp;rsquo;s built-in &lt;code&gt;pfloat&lt;/code&gt; parser:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fsharp&#34; data-lang=&#34;fsharp&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; jnumber &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pfloat &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; JNumber
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;(Note that F# allows us to pass the object constructor &lt;code&gt;JNumber&lt;/code&gt; as a function argument.)&lt;/p&gt;
&lt;p&gt;If you compare the precise number format supported by &lt;code&gt;pfloat&lt;/code&gt; with that in the JSON spec, you&amp;rsquo;ll see that &lt;code&gt;pfloat&lt;/code&gt; supports a superset of the JSON format. In contrast to the JSON format the &lt;code&gt;pfloat&lt;/code&gt; parser also recognizes &lt;code&gt;NaN&lt;/code&gt; and &lt;code&gt;Infinity&lt;/code&gt; values, accepts a leading plus sign, accepts leading zeros and even supports the hexadecimal float format of Java and C99. Depending on the context this behaviour can be considered a feature or a limitation of the parser. For most applications it probably doesn&amp;rsquo;t matter, and the JSON RFC clearly states that a JSON parser may support a superset of the JSON syntax. However, if you&amp;rsquo;d rather only support the exact JSON number format, you can implement such a float parser rather easily based on the configurable &lt;code&gt;numberLiteral&lt;/code&gt; parser (just have a look at how this is currently done in the &lt;code&gt;pfloat&lt;/code&gt; source).&lt;/p&gt;
&lt;p&gt;The JSON string format takes a little more effort to implement, but we&amp;rsquo;ve already parsed a similar format with the &lt;code&gt;stringLiteral&lt;/code&gt; parsers in [Parsing string data](#Parsing string data), so we can just adapt one of those parsers for our purpose:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fsharp&#34; data-lang=&#34;fsharp&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; stringLiteral &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; escape &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;  anyOf &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\\&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/bfnrt&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
                  &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt;
                      &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;b&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\b&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
                      &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;f&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\u000C&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
                      &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;n&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
                      &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;r&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\r&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
                      &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;t&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\t&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
                      &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; c   &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;string&lt;/span&gt; c &lt;span style=&#34;color:#75715e&#34;&gt;// every other char is mapped to itself
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; unicodeEscape &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;
    	&lt;span style=&#34;color:#e6db74&#34;&gt;/// converts a hex char ([0-9a-fA-F]) to its integer number (0-15)
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; hex2int c &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;int c &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt; 15&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;int c &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; 6&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;9

        str &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;u&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; pipe4 hex hex hex hex &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;fun&lt;/span&gt; h3 h2 h1 h0 &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;
            &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;hex2int h3&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;4096 &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;hex2int h2&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;256 &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;hex2int h1&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;16 &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; hex2int h0
            &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;char&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;string&lt;/span&gt;
        &lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;

    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; escapedCharSnippet &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; str &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\\&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;escape &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; unicodeEscape&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; normalCharSnippet  &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; manySatisfy &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;fun&lt;/span&gt; c &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; c &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#34;&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; c &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;\\&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;

    between &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;str &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;str &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
            &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;stringsSepBy normalCharSnippet escapedCharSnippet&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;stringLiteral&lt;/code&gt; parses string literals as a sequence of normal char snippets separated by escaped char snippets. A normal char snippet is any sequence of chars that does not contain the chars &lt;code&gt;&#39;&amp;quot;&#39;&lt;/code&gt; and &lt;code&gt;&#39;\\&#39;&lt;/code&gt;. An escaped char snippet consists of a backslash followed by any of the chars &lt;code&gt;&#39;\\&#39;&lt;/code&gt;, &lt;code&gt;&#39;\&amp;quot;&#39;&lt;/code&gt;, &lt;code&gt;&#39;/&#39;&lt;/code&gt;, &lt;code&gt;&#39;b&#39;&lt;/code&gt;, &lt;code&gt;&#39;f&#39;&lt;/code&gt;, &lt;code&gt;&#39;n&#39;&lt;/code&gt;, &lt;code&gt;&#39;r&#39;&lt;/code&gt;, &lt;code&gt;&#39;t&#39;&lt;/code&gt;, or an Unicode escape. An Unicode escape consists of an &lt;code&gt;&#39;u&#39;&lt;/code&gt; followed by four hex chars representing an UTF-16 code point.&lt;/p&gt;
&lt;p&gt;[#createParserForwardedToRef-example]
The grammar rules for JSON lists and objects are recursive, because any list or object can contain itself any kind of JSON value. Hence, in order to write parsers for the list and object grammar rules, we need a way to refer to the parser for any kind of JSON value, even though we haven&amp;rsquo;t yet constructed this parser. Like it is so often in computing, we can solve this problem by introducing an extra indirection:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fsharp&#34; data-lang=&#34;fsharp&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; jvalue&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; jvalueRef &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; createParserForwardedToRef&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;Json&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;unit&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;As you might have guessed from the name, &lt;code&gt;createParserForwardedToRef&lt;/code&gt; creates a parser (&lt;code&gt;jvalue&lt;/code&gt;) that forwards all invocations to the parser in a reference cell (&lt;code&gt;jvalueRef&lt;/code&gt;). Initially, the reference cell holds a dummy parser, but since the reference cell is mutable, we can later replace the dummy parser with the actual value parser, once we have finished constructing it.&lt;/p&gt;
&lt;p&gt;The JSON RFC sensibly only permits spaces, (horizontal) tabs, line feeds and carriage returns as whitespace characters, which allows us to use the built-in &lt;code&gt;spaces&lt;/code&gt; parser for parsing whitespace:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fsharp&#34; data-lang=&#34;fsharp&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; ws &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; spaces
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Both JSON lists and objects are syntactically represented as a comma-separated lists of &amp;ldquo;elements&amp;rdquo; between brackets, where whitespace is allowed before and after any bracket, comma and list element. We can conveniently parse such lists with the following helper function:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fsharp&#34; data-lang=&#34;fsharp&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; listBetweenStrings sOpen sClose pElement f &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;
    between &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;str sOpen&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;str sClose&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
            &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;ws &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; sepBy &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;pElement &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; ws&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;str &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; ws&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; f&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This function takes four arguments: an opening string, a closing string, an element parser and a function that is applied to the parsed list of elements.&lt;/p&gt;
&lt;p&gt;With the help of this function we can define the parser for a JSON list as follows:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fsharp&#34; data-lang=&#34;fsharp&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; jlist   &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; listBetweenStrings &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; jvalue JList
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;JSON objects are lists of key-value pairs, so we need a parser for a key-value pair:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fsharp&#34; data-lang=&#34;fsharp&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; keyValue &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; stringLiteral &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;ws &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; str &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; ws &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; jvalue&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;(Remember, the points on both sides of &lt;code&gt;.&amp;gt;&amp;gt;.&lt;/code&gt; indicate that the results of the two parsers on both sides are returned as a tuple.)&lt;/p&gt;
&lt;p&gt;By passing the &lt;code&gt;keyValue&lt;/code&gt; parser to &lt;code&gt;listBetweenStrings&lt;/code&gt; we obtain a parser for JSON objects:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fsharp&#34; data-lang=&#34;fsharp&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; jobject &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; listBetweenStrings &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; keyValue &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Map.ofList &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; JObject&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;[#json-value-parser]
Having defined parsers for all the possible kind of JSON values, we can combine the different cases with a &lt;code&gt;choice&lt;/code&gt; parser to obtain the finished parser for JSON values:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fsharp&#34; data-lang=&#34;fsharp&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; jvalueRef &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; choice &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;jobject
                        jlist
                        jstring
                        jnumber
                        jtrue
                        jfalse
                        jnull&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The &lt;code&gt;jvalue&lt;/code&gt; parser doesn&amp;rsquo;t accept leading or trailing whitespace, so we need to define our parser for complete JSON documents as follows:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fsharp&#34; data-lang=&#34;fsharp&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; json &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ws &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; jvalue &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; ws &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; eof
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This parser will try to consume a complete JSON input stream and, if successful, will return a &lt;code&gt;Json&lt;/code&gt; AST of the input as the parser result&lt;/p&gt;
&lt;p&gt;And that&amp;rsquo;s it, we&amp;rsquo;re finished with our JSON parser. If you want to try this parser out on some sample input, please take a look at the JSON project in the &lt;strong&gt;Samples&lt;/strong&gt; folder.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Глава 12. Куда дальше?</title>
      <link>https://DmitriyVlasov.ru/ru/publication/fparsec-tutorial/12-what-now/</link>
      <pubDate>Sat, 28 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://DmitriyVlasov.ru/ru/publication/fparsec-tutorial/12-what-now/</guid>
      <description>&lt;p&gt;If this tutorial has whet your appetite for a more in-depth introduction to FParsec, just head over to the &lt;a href=&#34;http://www.quanttec.com/fparsec/users-guide/&#34;&gt;user&amp;rsquo;s guide&lt;/a&gt;. If you can&amp;rsquo;t wait to write your own parser, then bookmark the &lt;a href=&#34;http://www.quanttec.com/fparsec/reference/parser-overview.html&#34;&gt;parser overview&lt;/a&gt; page, maybe take a short look at the example parsers in the &lt;strong&gt;Samples&lt;/strong&gt; folder and just start hacking. You can always consult the user&amp;rsquo;s guide at a later point should you get stuck somewhere.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Power BI Custom Connector от 0 к 1</title>
      <link>https://DmitriyVlasov.ru/ru/talk/power-bi-custom-connector-from-zero-to-one/</link>
      <pubDate>Thu, 28 Feb 2019 19:00:00 +0300</pubDate>
      <guid>https://DmitriyVlasov.ru/ru/talk/power-bi-custom-connector-from-zero-to-one/</guid>
      <description>&lt;h2 id=&#34;слайды&#34;&gt;Слайды&lt;/h2&gt;
&lt;!-- raw HTML omitted --&gt;
</description>
    </item>
    
    <item>
      <title>Как на Power Query создать таблицу?</title>
      <link>https://DmitriyVlasov.ru/ru/post/how-to-create-a-table-on-power-query/</link>
      <pubDate>Wed, 17 Oct 2018 00:00:00 +0000</pubDate>
      <guid>https://DmitriyVlasov.ru/ru/post/how-to-create-a-table-on-power-query/</guid>
      <description>&lt;h2 id=&#34;встроенные-средства-языка&#34;&gt;Встроенные средства языка&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;В этом варианте используем встроенную в язык функцию &lt;code&gt;#table&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Функция принимает два варианта параметров:
&lt;ul&gt;
&lt;li&gt;Первый параметр список имен полей, Второй список списков записей таблицы (см. &lt;a href=&#34;#fromFielList&#34;&gt;Создание таблицы на основании списка полей&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Первый параметр тип описывающий тип таблицы в виде перечисления в записи имен полей и их типов, Второй параметр список списков записей таблицы (см. &lt;a href=&#34;#fromTableType&#34;&gt;Создание таблицы на основании ее типа&lt;/a&gt;).&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h3 id=&#34;создание-таблицы-на-основании-списка-полей&#34;&gt;Создание таблицы на основании списка полей&lt;/h3&gt;
&lt;p&gt;Используем этот вариант если мы хотим создать таблицу и просто знаем какой то перечень полей и примерные значения для нее.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Мы можем просто определить таблицу и передав пустой список вторым параметром просто создать пустую таблицу&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;#table(
  // Список имен полей 
    { &amp;quot;Digit&amp;quot;, &amp;quot;Name&amp;quot; },
  // Пустой список
    {} 
)
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;Или добавить какие то статические данные:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;#table(
  // Список имен полей 
    { &amp;quot;Digit&amp;quot;, &amp;quot;Name&amp;quot; },
  // Список списков записей таблицы
    {
      {1,&amp;quot;one&amp;quot;}, 
      {2,&amp;quot;two&amp;quot;}, 
      {3,&amp;quot;three&amp;quot;}
    } 
)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h3 id=&#34;создание-таблицы-на-основании-ее-типа&#34;&gt;Создание таблицы на основании ее типа&lt;/h3&gt;
&lt;p&gt;Используем этот вариант если мы хотим создать таблицу и уже на первом этапе определить с какими типами полей в дальнейшем мы хотим работать.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Мы можем просто определить таблицу и передав пустой список вторым параметром просто создать пустую таблицу&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;#table(
  // Тип описывающий таблицу через определения в записи типов ее полей:
    type table [Digit = number, Name = text], 
  // Пустой список
    {}
  } 
)
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;Или добавить какие то статические данные:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;#table(
    // Тип описывающий таблицу через определения в записи типов ее полей:
      type table [Digit = number, Name = text], 
    // Список списков записей таблицы
      {
        {1,&amp;quot;one&amp;quot;}, 
        {2,&amp;quot;two&amp;quot;}, 
        {3,&amp;quot;three&amp;quot;}
      } 
)
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;использованные-источники&#34;&gt;Использованные источники&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://msdn.microsoft.com/en-us/query-bi/m/power-query-m-language-specification&#34;&gt;Power Query M language specification&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Передача Параметров из Power BI в скрипт на Python</title>
      <link>https://DmitriyVlasov.ru/ru/post/power-bi-use-python-script-with-parameters/</link>
      <pubDate>Mon, 20 Aug 2018 00:00:00 +0000</pubDate>
      <guid>https://DmitriyVlasov.ru/ru/post/power-bi-use-python-script-with-parameters/</guid>
      <description>&lt;h2 id=&#34;предисловие&#34;&gt;Предисловие&lt;/h2&gt;
&lt;p&gt;После установки &lt;a href=&#34;https://powerbi.microsoft.com/en-us/blog/power-bi-desktop-august-2018-feature-summary&#34;&gt;августовского релиза Power BI &lt;/a&gt; я очень обрадовался, увидев поддержку &lt;a href=&#34;https://powerbi.microsoft.com/en-us/blog/power-bi-desktop-august-2018-feature-summary/#python&#34;&gt;Python&lt;/a&gt;. Как раз в работе оказался проект, в котором возможность поддержки Python помогла реализовать требования заказчика. Нужно было подключаться к API, предварительно зашифровывая тело запроса открытым и закрытым ключём, перед отправлением запроса к API. К сожалению, как оказалось, &lt;a href=&#34;https://blog.crossjoin.co.uk/2017/11/06/which-m-functions-are-only-available-to-custom-data-connectors/&#34;&gt;поддержка шифрования в Power BI&lt;/a&gt; есть только в &lt;a href=&#34;https://github.com/Microsoft/DataConnectors&#34;&gt;кастомных дата коннекторах&lt;/a&gt;, и отсутствует в Power Query для Power BI Desktop. А при всем моем теплом отношении к языку R, связываться с ним лишний раз, мне бы не хотелось. Поэтому поддержке Python в Power BI я был рад очень.&lt;/p&gt;
&lt;h2 id=&#34;задача&#34;&gt;Задача&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Настроить управление поведением скрипта на Python через параметры отчета Power BI Desktop.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;демонстрационный-отчет-в-power-bi-online&#34;&gt;Демонстрационный отчет в Power BI Online&lt;/h2&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;h2 id=&#34;описание-решения&#34;&gt;Описание решения&lt;/h2&gt;
&lt;h3 id=&#34;предварительные-требования&#34;&gt;Предварительные требования&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;У вас установлена &lt;a href=&#34;https://www.anaconda.com/download/&#34;&gt;Anaconda&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;В Power BI включена &lt;a href=&#34;https://powerbi.microsoft.com/en-us/blog/power-bi-desktop-august-2018-feature-summary/#python&#34;&gt;поддержка Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Запуск в терминале &lt;code&gt;jupyter notebook&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Откройте перед глазами памятку по &lt;a href=&#34;https://github.com/ehmatthes/pcc/releases/download/v1.0.0/beginners_python_cheat_sheet_pcc_all.pdf&#34;&gt;Python&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;подготовка-в-power-bi&#34;&gt;Подготовка в Power BI&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;В файле Power BI создаем параметры отчета.&lt;/li&gt;
&lt;li&gt;Оборачиваем параметры отчета в таблицу с необходимой структурой. Если используются параметры типа &lt;code&gt;date&lt;/code&gt;/&lt;code&gt;datetime&lt;/code&gt;, то предварительно их приводим к строке:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;let
  Parameters = Table.FromRows(
    { 
      { 
        Date.ToText( FromDate, &amp;quot;dd.MM.yyyy&amp;quot; ), 
        Date.ToText( ToDate,   &amp;quot;dd.MM.yyyy&amp;quot; ) 
      } 
    },
    type table [ FromDate = text, ToDate = text ] 
  )
in
  Parameters
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;разработка-скрипта-python&#34;&gt;Разработка скрипта Python&lt;/h3&gt;
&lt;p&gt;В моем примере скрипт на Python будем разрабатывать в инструменте, популярном у аналитиков данных &lt;a href=&#34;http://jupyter.org/&#34;&gt;Jupyter Notebook&lt;/a&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Создаем файл блокнота.&lt;/li&gt;
&lt;li&gt;Импортируем библиотеку работы с таблицами Pandas (структура аналогичная объекту Table в Power BI)&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; pandas &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; pd
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;Объявляем переменную &lt;code&gt;Parameters&lt;/code&gt; повторяющую структуру, таблицы с параметрами на Power Query (см. выше), это необходимо для отладки и проверки работоспособности скрипта.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; pandas &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; pd

FromDate &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;01.07.2018&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
ToDate &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;31.07.2018&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;

Parameters &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;DataFrame(
    [ 
      [ 
        FromDate, ToDate 
      ] 
    ],
    columns &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;FromDate&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;ToDate&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;] 
)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;В рамках рассмотренного примера для простоты работы внутри скрипта на Python вручную создается таблица, а затем с помощью переданных параметров таблица отфильтровывается. Полученный результат далее возвращается в Power BI и может использоваться для дальнейшего анализа.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Далее реализовываем логику обработки скрипта.&lt;/li&gt;
&lt;li&gt;Для удобства переноса разработанного скрипта, обработки снова объявляем импорт библиотеки Pandas.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; pandas &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; pd
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;Помним о том, что мы передали параметры в формате даты времени в текстовом формате ( объяснение подробнее &lt;a href=&#34;#%D0%9E%D0%B1%D1%81%D1%83%D0%B6%D0%B4%D0%B5%D0%BD%D0%B8%D0%B5-%D1%80%D0%B5%D1%88%D0%B5%D0%BD%D0%B8%D1%8F&#34;&gt;см ниже&lt;/a&gt; )&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;Parameters[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;FromDate&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;to_datetime( Parameters[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;FromDate&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;], format&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%d&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;m.&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Y&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; )
Parameters[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;ToDate&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;to_datetime( Parameters[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;ToDate&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;], format&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%d&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;m.&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Y&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; )
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;Если вам нужно настроить преобразование строки под ваш формат даты времени, то вы можете использовать для этого таблицу кодов форматов для &lt;a href=&#34;https://docs.python.org/2/library/datetime.html#strftime-and-strptime-behavior&#34;&gt;2&lt;/a&gt; или &lt;a href=&#34;https://docs.python.org/3/library/datetime.html#strftime-and-strptime-behavior&#34;&gt;3&lt;/a&gt; Питона соответственно.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Получаем данные из внешней системы. Для демо примера создаем вручную таблицу в Pandas&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;Sales &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;DataFrame( [
        [&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;01.07.2018&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;], 
        [&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;01.08.2018&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;], 
        [&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;01.09.2018&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;30&lt;/span&gt;]
    ], columns&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Date&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Amount&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt; ] 
)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;Для корректной работы сортировки и фильтрации данных по столбцу даты времени приводим, в исследуемых таблицах столбец к дате.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;Sales[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Date&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;to_datetime(Sales[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Date&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;],format&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%d&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;m.&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Y&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;Применяем бизнес правила полученные от клиента и параметры, полученные из Power BI, к полученной в скрипте таблице&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;Result &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Sales[ Sales[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Date&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; Parameters[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;FromDate&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;][&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;] ]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Средствами &lt;a href=&#34;http://jupyter.org/&#34;&gt;Jupyter Notebook&lt;/a&gt; мы можем отладить и проверить полученные данные перед копированием полученного сприпта в Power BI.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;В результате получаем скрипт, подготовленный для передачи в Power BI&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Импортируем библиотеку работы с таблицами Pandas &lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; pandas &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; pd

&lt;span style=&#34;color:#75715e&#34;&gt;# Готовим параметры для использования&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# Так как параметры даты, времени внутрь Python из Power BI передаются не совсем корректно (с ошибкой).&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# Удобно параметры даты передать в строковом виде, а затем привести обрратно в дате.&lt;/span&gt;
Parameters[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;FromDate&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;to_datetime( Parameters[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;FromDate&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;], format&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%d&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;m.&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Y&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; )
Parameters[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;ToDate&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;to_datetime( Parameters[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;ToDate&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;], format&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%d&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;m.&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Y&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; )

&lt;span style=&#34;color:#75715e&#34;&gt;# Получаем данные из внешней системы. Для демо примера просто создаем вручную таблицу в Pandas &lt;/span&gt;
Sales &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;DataFrame( [
        [&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;01.07.2018&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;], 
        [&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;01.08.2018&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;], 
        [&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;01.09.2018&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;30&lt;/span&gt;]
    ], columns&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Date&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Amount&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt; ] 
)
Sales[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Date&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;to_datetime(Sales[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Date&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;],format&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%d&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;m.&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Y&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;)

&lt;span style=&#34;color:#75715e&#34;&gt;# Применяем бизнес правила и параметры полученные из Power BI к таблице и возвращаем результат&lt;/span&gt;
Result &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Sales[ Sales[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Date&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; Parameters[&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;FromDate&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;][&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;] ]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;вызов-скрипта-на-python-из-power-bi&#34;&gt;Вызов скрипта на Python из Power BI&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Так как, на данный момент, в мастере создания скрипта на Python в Power BI нет возможности передать не обязательные параметры, для простоты создаем минимально рабочий пример для создания корректного запроса Power Query, который затем обновим разработанным выше скриптом.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; pandas &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; pd

Dummy &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;DataFrame( [ [ &lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; ] ], columns &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#e6db74&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Dummy&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;] )

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;В мастере создания запросов Power BI Desktop, выбираем из раскрывающегося списка скрипт на Python. Передам минимальный скрипт на Python написанный выше.&lt;/li&gt;
&lt;li&gt;В мастере выбираем флажком таблицу &lt;code&gt;Dummy&lt;/code&gt; и нажимаем OK.&lt;/li&gt;
&lt;li&gt;Скрипт будет успешно создан.&lt;/li&gt;
&lt;li&gt;Для передачи параметров нам придется перейти в расширенный редактор Power Query, где мы увидим следующий текст:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;let
    Source = Python.Execute(&amp;quot;import pandas as pd#(lf)#(lf)Dummy = pd.DataFrame( [ [ &amp;quot;&amp;quot;&amp;quot;&amp;quot; ] ], columns = [&#39;Dummy&#39;] )#(lf)&amp;quot;),
    Dummy1 = Source{[Name=&amp;quot;Dummy&amp;quot;]}[Value]
in
    Dummy1
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;Последний шаг навигации нам пока что не нужен, уберем его.&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;let
    Source = Python.Execute(&amp;quot;import pandas as pd#(lf)#(lf)Dummy = pd.DataFrame( [ [ &amp;quot;&amp;quot;&amp;quot;&amp;quot; ] ], columns = [&#39;Dummy&#39;] )#(lf)&amp;quot;)
in
    Source
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;Передадим параметры из Power Query в пустой скрипт. С помощью ручного редактирования в расширенном редакторе Power Query добавим второй параметр вида &lt;code&gt;[ Parameters = Parameters ]&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;В результате получится следующий запроса на Power Query:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;let
    Source = Python.Execute(&amp;quot;import pandas as pd#(lf)#(lf)Dummy = pd.DataFrame( [ [ &amp;quot;&amp;quot;&amp;quot;&amp;quot; ] ], columns = [&#39;Dummy&#39;] )#(lf)&amp;quot;, [ Parameters = Parameters ])
in
    Source
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;Power Query предупредит что мы изменили определение скрипта. Мы должны согласиться с изменениями. В результате нам будет доступно для навигации две записи каждая из которых содержит таблицу.&lt;/li&gt;
&lt;li&gt;Отредактируем с помощью мастера запрос и вставим разработанный на предыдущем шаге скрипт, нажав на шестеренку напросив пункта Source.&lt;/li&gt;
&lt;li&gt;В результате получится следующий запроса на Power Query:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;let
  Source = Python.Execute(&amp;quot;import pandas as pd#(lf)import datetime as dt#(lf)#(lf)Parameters[&#39;FromDate&#39;] = pd.to_datetime( Parameters[&#39;FromDate&#39;], format=&amp;quot;&amp;quot;%d.%m.%Y&amp;quot;&amp;quot; )#(lf)Parameters[&#39;ToDate&#39;] = pd.to_datetime( Parameters[&#39;ToDate&#39;], format=&amp;quot;&amp;quot;%d.%m.%Y&amp;quot;&amp;quot; )#(lf)#(lf)Sales = pd.DataFrame( [#(lf)        [dt.date(2018,7,1), 10], #(lf)        [dt.date(2018,8,1), 20], #(lf)        [dt.date(2018,9,1), 30]#(lf)    ], columns=[&#39;Date&#39;, &#39;Amount&#39; ] #(lf))#(lf)#(lf)Sales[&#39;Date&#39;] = pd.to_datetime(Sales[&#39;Date&#39;])#(lf)#(lf)Result = Sales[ Sales[&#39;Date&#39;] &amp;gt; Parameters[&#39;FromDate&#39;][0] ]&amp;quot;,[ Parameters = Parameters ])
in
    Source
&lt;/code&gt;&lt;/pre&gt;&lt;blockquote&gt;
&lt;p&gt;Обратите внимание на то, что все наше красивое форматирование в python Power BI Desktop собрал в одну строку. Так что если далее потребуется дорабатывать наш скрипт мы вернемся в Jupyter и последовательно проделаем шаги: исправим, отладим и так же передадим его через буфер обмена в Power BI Desktop.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;В результате у нас будет доступны все источники данных в формате &lt;code&gt;DataFrame&lt;/code&gt; которые мы объявили в скрипте и далее средствами Power Query как мы привыкли будем обрабатывать таблицы и объединять их в модель.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;материалы&#34;&gt;Материалы&lt;/h3&gt;
&lt;p&gt;Для удобства исследования статьи привожу готовый файл срипта и пример на Power BI:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/DmitriyVlasov/Blog/blob/master/samples/2018-08-20/sample-power-bi-use-python-script-with-parameters.pbix&#34;&gt;Решение на Power BI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/DmitriyVlasov/Blog/blob/master/samples/2018-08-20/sample-power-bi-use-python-script-with-parameters.ipynb&#34;&gt;Файл скрипта на python в формате jupiter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://app.powerbi.com/view?r=eyJrIjoiNDNkZWM5OTgtZjRkMS00YzVkLTkxYjAtYjdmZDA2NzQ0YjdjIiwidCI6IjcyMTYyZmFhLWM0ZDMtNGVkNi04OWJkLWEzNzY0MjE3MDA2MyIsImMiOjl9&#34;&gt;Ссылка на интерактивный отчет в Power BI online&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;обсуждение-решения&#34;&gt;Обсуждение решения&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Из описания помощи к функции power query &lt;code&gt;Python.Execute&lt;/code&gt; видно, что функция получает два параметра &lt;code&gt;function (script as text, optional arguments as nullable record) as table&lt;/code&gt;. Обязательный &lt;code&gt;script&lt;/code&gt; собственно текст скрипта на Python и не обязательный &lt;code&gt;arguments&lt;/code&gt;. Опытным путем понял, что корректным форматом передачи аргументов внутрь скрипта является таблица. Таким образом для передачи аргументов нужно создать запись у которой есть хотя-бы одно значение содержащее таблицу. В нашем случае мы создали запись вида &lt;code&gt;[ Parameters = Parameters ]&lt;/code&gt;. Где справа ключ записи, а справа ссылка на таблицу содержащую параметры.&lt;/li&gt;
&lt;li&gt;При подготовке примера оказалось что у Power BI при передаче параметров есть особенность работы с типом &lt;code&gt;date&lt;/code&gt;/&lt;code&gt;datetime&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Дату и время в power query нужно приводить к строке.&lt;/li&gt;
&lt;li&gt;А внутри скрипта на python приводить обратно к типу &lt;code&gt;date&lt;/code&gt;/&lt;code&gt;datetime&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Microsoft PowerBI как альтернатива SQL Server Reporting Services: вместо или вместе?</title>
      <link>https://DmitriyVlasov.ru/ru/talk/power-bi-and-sql-server-reporting-services/</link>
      <pubDate>Tue, 05 Jun 2018 21:00:00 +0300</pubDate>
      <guid>https://DmitriyVlasov.ru/ru/talk/power-bi-and-sql-server-reporting-services/</guid>
      <description>&lt;p&gt;Прошло почти 3 месяца после моего выступления на митапе &lt;a href=&#34;https://www.facebook.com/yamoneywork/posts/352379185287478&#34;&gt;яндекс денег по SQL Server&lt;/a&gt;. И наконец вышла официальная статья в блоге на &lt;a href=&#34;https://habr.com/company/yamoney/blog/420087/&#34;&gt;хабре&lt;/a&gt;. В том числе есть &lt;a href=&#34;https://youtu.be/R6gfu4oIwlE?t=1s&#34;&gt;видео запись&lt;/a&gt; моего выступления. Атмосфера на митапе и выступлении была 
теплая и ламповая, сумрак и дружественная атмосфера.&lt;/p&gt;
&lt;p&gt;Во время записи моего выступления, как оказалось позже, &amp;ldquo;что то пошло не так&amp;rdquo; и видео оказалось в масштабе мобильного, расположена в не удобном месте, я в сумраке и экрана с выступлением скорее не видно. Но слышно хорошо, так что можно использовать как запись подкаста.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;P.S.: Послушал сам себя, голос понравился. Но со словами паразитами предстоит еще работать.&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;слайды&#34;&gt;Слайды&lt;/h2&gt;
&lt;!-- raw HTML omitted --&gt;
</description>
    </item>
    
    <item>
      <title>Обзор всех функций DAX</title>
      <link>https://DmitriyVlasov.ru/ru/post/dax-functions/</link>
      <pubDate>Wed, 19 Jul 2017 13:11:31 +0300</pubDate>
      <guid>https://DmitriyVlasov.ru/ru/post/dax-functions/</guid>
      <description>&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h1 id=&#34;предисловие&#34;&gt;Предисловие&lt;/h1&gt;
&lt;p&gt;Приводится обзор всех существующих функций DAX. Основное назначение статьи максимально возможно упростить обзор и изучение, навигацию и ориентирование по всем существующим функциям DAX в одной статье. По мере появления в статью будут добавляться новые DAX функции.&lt;/p&gt;
&lt;h1 id=&#34;содержание&#34;&gt;Содержание&lt;/h1&gt;
&lt;h2 id=&#34;краткое-содержание&#34;&gt;Краткое содержание&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#logicFunction&#34;&gt;Логические&lt;/a&gt; функции&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#textFunction&#34;&gt;Текстовые&lt;/a&gt; функции&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#mathFunction&#34;&gt;Математические&lt;/a&gt; и &lt;a href=&#34;#trigMathFunction&#34;&gt;Тригонометрические&lt;/a&gt; функции&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#dateTimeFunction&#34;&gt;Простые&lt;/a&gt; и &lt;a href=&#34;#dateTimeLogicFunction&#34;&gt;Интеллектуальные&lt;/a&gt; операции с датой и временем&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#informationFunction&#34;&gt;Информационные&lt;/a&gt; функции&lt;/li&gt;
&lt;li&gt;Функции &lt;a href=&#34;#agregateAndstatFunction&#34;&gt;Создания&lt;/a&gt; и &lt;a href=&#34;#filterFunction&#34;&gt;Фильтрации&lt;/a&gt; таблиц&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#statFunction&#34;&gt;Статистические&lt;/a&gt; функции&lt;/li&gt;
&lt;li&gt;Функции над &lt;a href=&#34;#patentChildFunction&#34;&gt;Иерархиями&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#otherFunction&#34;&gt;Прочие&lt;/a&gt; функции&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#syntaxElement&#34;&gt;Синтаксические элементы&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;подробное-содержание&#34;&gt;Подробное содержание&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#logicFunction&#34;&gt;Логические функции&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#textFunction&#34;&gt;Текстовые функции&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#baseTextFunction&#34;&gt;Базовые операции со стоками&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#formatTextFunction&#34;&gt;Форматирование и преобразование типов&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#searchAndReplaceTextFunction&#34;&gt;Поиск и замена&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#mathFunction&#34;&gt;Математические и тригонометрические функции&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#baseMathFunction&#34;&gt;Базовые операции с числами&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#roundMathFunction&#34;&gt;Округление&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#randomMathFunction&#34;&gt;Операции со случайными числами&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#trigMathFunction&#34;&gt;Тригонометрические функции и константы&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#dateTimeFunction&#34;&gt;Функции даты и времени&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#baseDateTimeFunction&#34;&gt;Базовые операции с датой и временем&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#constructorDateTimeFunction&#34;&gt;Конструкторы даты и времени&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#extendDateTimeFunction&#34;&gt;Расширенные операции с датой&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#dateTimeLogicFunction&#34;&gt;Интеллектуальные операции со временем&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#returnColDateTimeLogicFunction&#34;&gt;Функции возвращающие столбец дат&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#returnColPart1DateTimeLogicFunction&#34;&gt;Операции с периодами&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#returnColPart2DateTimeLogicFunction&#34;&gt;Операции днем, месяцем, кварталом и годом&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#returnCellPart1DateTimeLogicFunction&#34;&gt;Функции возвращающие ячейку с датой&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#returnCellPart2DateTimeLogicFunction&#34;&gt;Функции возвращающие ячейку со значением&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#returnValueDateTimeLogicFunction&#34;&gt;Функции возвращающие скалярное значение&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#informationFunction&#34;&gt;Информационные функции&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#userInformationFunction&#34;&gt;Информация о пользжователе&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#errorHanding&#34;&gt;Обработка ошибок&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#filterFunction&#34;&gt;Функции фильтрации&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#agregateAndstatFunction&#34;&gt;Агрегатные и статистические функции&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#agregareTableFunction&#34;&gt;Агрегатные функции над таблицами&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#agregareColumnFunction&#34;&gt;Агрегатные функции над столбцами и выражениями&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#statFunction&#34;&gt;Статистические функции над столбцами и выражениями&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#notesAgregateAndstatFunction&#34;&gt;Замечания к агрегатным и статистическим функциям&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#patentChildFunction&#34;&gt;Функции над иерархическими данными&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#otherFunction&#34;&gt;Прочие функции&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#syntaxElement&#34;&gt;Синтаксические элементы&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h1 id=&#34;логические-функции&#34;&gt;Логические функции&lt;/h1&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Имя функции&lt;/th&gt;
&lt;th&gt;Описание&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/ee635034&#34;&gt;TRUE&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Возвращает логическое значение &lt;code&gt;true&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/ee634894&#34;&gt;FALSE&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Возвращает логическое значение &lt;code&gt;false&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/ee634379&#34;&gt;AND&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Проверяет значения аргументов и возвращает значение &lt;code&gt;true&lt;/code&gt;, если оба аргумента имеют значение &lt;code&gt;true&lt;/code&gt;. В противном случае возвращает значение &lt;code&gt;false&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/ee634951&#34;&gt;OR&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Проверяет, является ли один из аргументов &lt;code&gt;true&lt;/code&gt;, и если да, то возвращает значение &lt;code&gt;true&lt;/code&gt;. Функция возвращает значение &lt;code&gt;false&lt;/code&gt;, если оба аргумента имеют значение &lt;code&gt;false&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/ee634884&#34;&gt;NOT&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Изменяет значение &lt;code&gt;false&lt;/code&gt; на &lt;code&gt;true&lt;/code&gt;, а &lt;code&gt;true&lt;/code&gt; на &lt;code&gt;false&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/ee634824&#34;&gt;IF&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Проверяет выполнение условия, указанного в первом аргументе. Возвращает одно значение, если условие равно &lt;code&gt;true&lt;/code&gt;, и другое значение, если условие равно &lt;code&gt;false&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/gg492166&#34;&gt;SWITCH&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Вычисляет выражение на основе списка значений и возвращает одно из нескольких возможных результирующих выражений.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;a href=&#34;#TOC&#34;&gt;К содержанию&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h1 id=&#34;текстовые-функции&#34;&gt;Текстовые функции&lt;/h1&gt;
&lt;p&gt;Текстовые функции, основаны на библиотеке строковых функций в Excel. C помощью этих функций можно вернуть часть строки, искать текст в строке или объединить строковые значения, а так же для управления форматами дат, времени и чисел.&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h2 id=&#34;базовые-операции-со-стоками&#34;&gt;Базовые операции со стоками&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Имя функции&lt;/th&gt;
&lt;th&gt;Описание&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/ee634811&#34;&gt;CONCATENATE&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Соединяет две текстовые строки в одну текстовую строку (Чаще удобнее использовать оператор &lt;code&gt;&amp;amp;&lt;/code&gt;).&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/en-us/library/mt163697.aspx&#34;&gt;CONCATENATEX&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Функция работает над таблицей и возвращает текстовую строку. Сначала  для каждой записи таблицы вычисляет выражение, а затем сводит все вычесленные записи таблицы в одну строку с учетом разделителя из параметров.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/ee634898&#34;&gt;REPT&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Повторяет текст заданное количество раз.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/ee634781&#34;&gt;LEFT&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Возвращает указанное количество символов с начала текстовой строки.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/ee634358&#34;&gt;RIGHT&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Функция RIGHT возвращает последний символ или последние символы текстовой строки, в зависимости от указанного количества символов.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/ee634558&#34;&gt;TRIM&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Удаляет все пробелы из текста, за исключением единичных пробелов между словами.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/ee634251&#34;&gt;LOWER&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Преобразует все буквы в текстовой строке в нижний регистр.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/ee634377&#34;&gt;UPPER&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Преобразует все буквы в текстовой строке в верхний регистр.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h2 id=&#34;форматирование-и-преобразование-типов&#34;&gt;Форматирование и преобразование типов&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Имя функции&lt;/th&gt;
&lt;th&gt;Описание&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/ee634924&#34;&gt;FORMAT&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Преобразует значение в текст в указанном числовом формате. (см. также предопределенные форматы &lt;a href=&#34;https://msdn.microsoft.com/ru-ru/ee634561&#34;&gt;чисел&lt;/a&gt; и &lt;a href=&#34;https://msdn.microsoft.com/ru-ru/ee634813&#34;&gt;даты и времени&lt;/a&gt;. Пользовательские форматы &lt;a href=&#34;https://msdn.microsoft.com/ru-ru/ee634206&#34;&gt;чисел&lt;/a&gt; и &lt;a href=&#34;https://msdn.microsoft.com/ru-ru/ee634398&#34;&gt;даты и времени&lt;/a&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/ee634924&#34;&gt;FIXED&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Преобразует значение в текст в указанном числовом формате.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/ee634584&#34;&gt;VALUE&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Преобразует текстовую строку, представляющую число, в число.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/gg492191&#34;&gt;CURRENCY&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Вычисляет аргумент и возвращает результат как тип данных currency.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h2 id=&#34;поиск-и-замена&#34;&gt;Поиск и замена&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Имя функции&lt;/th&gt;
&lt;th&gt;Описание&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/en-us/library/mt825189.aspx&#34;&gt;UNICHAR&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Возвращает символ Юникод по его числовому значению. Работает аналогично функции Excel &lt;a href=&#34;https://goo.gl/33djp8&#34;&gt;ЮНИСИМВ&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;UNICODE&lt;/td&gt;
&lt;td&gt;Возвращает число (код знака), соответствующее первому знаку в тексте.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/ee634917&#34;&gt;LEN&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Возвращает число символов в текстовой строке.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/ee634235&#34;&gt;SEARCH&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Возвращает номер позиции, начиная с которой обнаружена подстрока. Поиск идет слева на право без учета регистра и с учетом диакритических знаков.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/ee634882&#34;&gt;FIND&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Возвращает начальный номер позиции, начиная с которой обнаружена подстрока. Поиск идет с учетом регистра.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/ee634548&#34;&gt;MID&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Возвращает строку символов из середины текстовой строки с учетом начальной позиции и длины.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/ee634374&#34;&gt;REPLACE&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Заменяет часть текстовой строки другой текстовой строкой на основе указанного числа символов.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/ee634233&#34;&gt;SUBSTITUTE&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Заменяет существующий текст новым в текстовой строке.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/ee634408&#34;&gt;EXACT&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Сравнивает две текстовые строки и возвращает &lt;code&gt;true&lt;/code&gt;, если они полностью одинаковые, и &lt;code&gt;false&lt;/code&gt; в противном случае. Функция учитывает регистр, но не учитывает отличия форматирования. Можно использовать функцию, чтобы проверить входящий в документ текст.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;a href=&#34;#TOC&#34;&gt;К содержанию&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h1 id=&#34;математические-и-тригонометрические-функции&#34;&gt;Математические и тригонометрические функции&lt;/h1&gt;
&lt;p&gt;Математические функции в DAX похожи на математические и тригонометрические функции Excel. Однако имеются некоторые отличия в типах числовых данных.&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h2 id=&#34;базовые-операции-с-числами&#34;&gt;Базовые операции с числами&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Имя функции&lt;/th&gt;
&lt;th&gt;Описание&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/ee634559&#34;&gt;SQRT&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Возвращает квадратный корень числа.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/ee634921&#34;&gt;POWER&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Возвращает результат возведения числа в степень.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/ee634249&#34;&gt;SIGN&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Определяет знак числа, результата вычисления или значения в столбце. Функция возвращает значение 1, если число положительное, значение 0 (ноль), если число равно нулю, и значение -1, если число отрицательное.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/ee634382&#34;&gt;QUOTIENT&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Выполняет деление и возвращает только целочисленную часть результата. Эта функция используется, если не нужно учитывать остаток от деления.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h2 id=&#34;округление&#34;&gt;Округление&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Имя функции&lt;/th&gt;
&lt;th&gt;Описание&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/ee634566&#34;&gt;ABS&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Возвращает абсолютное значение числа.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/ee634373&#34;&gt;INT&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Округляет число в меньшую сторону до ближайшего целого.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/ee634402&#34;&gt;ROUND&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Округляет число до указанного количества разрядов.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/ee634963&#34;&gt;ROUNDDOWN&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Округляет число вниз, к нулю.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/ee634948&#34;&gt;ROUNDUP&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Округляет число в большую сторону, от 0 (нуля).&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/ee634815&#34;&gt;FLOOR&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Округляет число в меньшую сторону (к нулю) до ближайшего числа, кратного заданной значимости.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/ee634541&#34;&gt;CEILING&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Округляет число в большую сторону до ближайшего целого или до ближайшего числа, кратного заданной значимости.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/gg413419&#34;&gt;ISO.CEILING&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Округляет число в большую сторону до ближайшего целого или до ближайшего числа, кратного заданной значимости.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/ee634553&#34;&gt;MROUND&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Возвращает число, округленное до кратного заданной значимости.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/ee634907&#34;&gt;TRUNC&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Усекает число до целого, удаляя дробную часть.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h2 id=&#34;операции-со-случайными-числами&#34;&gt;Операции со случайными числами&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Имя функции&lt;/th&gt;
&lt;th&gt;Описание&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/ee634783&#34;&gt;RAND&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Возвращает случайное число, большее или равное 0 и меньшее 1, с равномерным распределением. Возвращаемое число изменяется каждый раз при пересчете ячейки, содержащей данную функцию.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/ee634569&#34;&gt;RANDBETWEEN&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Возвращает случайное число, расположенное в интервале между двумя заданными числами.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h2 id=&#34;тригонометрические-функции-и-константы&#34;&gt;Тригонометрические функции и константы&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Имя функции&lt;/th&gt;
&lt;th&gt;Описание&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/ee634817&#34;&gt;PI&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Возвращает число $Pi$ с точностью до 15 знака.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/ee634774&#34;&gt;LOG&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Возвращает логарифм числа по указанному основанию.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/ee634578&#34;&gt;LOG10&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Возвращает логарифм числа по основанию 10.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/ee634772&#34;&gt;LN&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Возвращает натуральный логарифм числа. Натуральные логарифмы вычисляются по основанию $e$.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/ee634208&#34;&gt;EXP&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Возвращает значение выражения $e^n$, где $n$ - заданное в параметрах число.  Функция &lt;code&gt;EXP&lt;/code&gt; обратна функции &lt;code&gt;LN&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/ee634540&#34;&gt;FACT&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Возвращает факториал числа.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;a href=&#34;#TOC&#34;&gt;К содержанию&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h1 id=&#34;функции-даты-и-времени&#34;&gt;Функции даты и времени&lt;/h1&gt;
&lt;p&gt;Многие функции даты и времени в DAX схожи с функциями даты и времени Excel. Однако в функциях DAX используется тип данных &lt;code&gt;datetime&lt;/code&gt; Microsoft SQL Server.&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h2 id=&#34;базовые-операции-с-датой-и-временем&#34;&gt;Базовые операции с датой и временем&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Имя функции&lt;/th&gt;
&lt;th&gt;Описание&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/ee634567&#34;&gt;YEAR&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Возвращает для заданной даты год в виде четырехзначного числа от 1900 до 9999.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/ee634914&#34;&gt;MONTH&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Возвращает месяц в виде числа от 1 до 12.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/ee634390&#34;&gt;DAY&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Возвращает день месяца в виде числа от 1 до 31.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/ee634800&#34;&gt;HOUR&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Возвращает значение часа в виде числа от 0 до 23.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/ee634776&#34;&gt;MINUTE&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Возвращает число минут от 0 до 59 по заданному значению даты и времени.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/ee634889&#34;&gt;SECOND&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Возвращает для заданного значения времени число секунд в виде числа от 0 до 59.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/ee634550&#34;&gt;WEEKDAY&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Возвращает число от 1 до 7, определяющее день недели для даты. По умолчанию дни недели считаются от воскресенья (1) до субботы (7).&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/ee634572&#34;&gt;WEEKNUM&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Возвращает номер недели для заданных даты и года в соответствии со значением тип возврата. Номер недели указывает числовую позицию недели относительно начала года.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h2 id=&#34;конструкторы-даты-и-времени&#34;&gt;Конструкторы даты и времени&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Имя функции&lt;/th&gt;
&lt;th&gt;Описание&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/ee634927&#34;&gt;DATE&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Преобразует год, месяц, день, заданный в виде чисел в дату формате &lt;code&gt;datetime&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/ee634564&#34;&gt;TIME&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Преобразует часы, минуты и секунды, заданные в виде чисел, во время в формате &lt;code&gt;datetime&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/ee634543&#34;&gt;DATEVALUE&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Преобразует дату из текстового формата в дату в формате &lt;code&gt;datetime&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/ee635036&#34;&gt;TIMEVALUE&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Преобразует время из текстового формата во время в формате &lt;code&gt;datetime&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/ee634554&#34;&gt;TODAY&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Возвращает текущую дату без времени.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/ee634891&#34;&gt;NOW&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Возвращает текущую дату и время.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h2 id=&#34;расширенные-операции-с-датой&#34;&gt;Расширенные операции с датой&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Имя функции&lt;/th&gt;
&lt;th&gt;Описание&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/library/dn802538.aspx&#34;&gt;DATEDIFF&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Возвращает интервал времени между двумя датами. (Тип интервала указывается в параметре Interval) Интервал может принимать следующие значения: &lt;code&gt;second&lt;/code&gt;, &lt;code&gt;minute&lt;/code&gt;, &lt;code&gt;hour&lt;/code&gt;, &lt;code&gt;day&lt;/code&gt;, &lt;code&gt;week&lt;/code&gt;, &lt;code&gt;month&lt;/code&gt;, &lt;code&gt;quarter&lt;/code&gt;, &lt;code&gt;year&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/ee634405&#34;&gt;YEARFRAC&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Вычисляет долю года, представленную числом целых дней между двумя датами. Функция позволяет определить долю преимуществ или обязательств за целый год, приходящуюся на указанный срок.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/ee634544&#34;&gt;EDATE&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Возвращает дату, отстоящую от заданной даты на указанное число месяцев (до или после). С помощью функции вычисляются сроки обязательств и платежей, приходящиеся на тот же день месяца, что и начало расчетного периода.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/ee634394&#34;&gt;EOMONTH&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Возвращает дату окончания месяца (до или после указанного числа месяцев). С помощью функции вычисляются сроки обязательств и платежей, приходящиеся на конец месяца.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;a href=&#34;#TOC&#34;&gt;К содержанию&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h1 id=&#34;интеллектуальные-операции-со-временем&#34;&gt;Интеллектуальные операции со временем&lt;/h1&gt;
&lt;p&gt;Интеллектуальные операции со временем, поддерживают методы анализа бизнес-аналитики и позволяют работать с данными с использованием временных периодов, таких как дни, месяцы, кварталы и годы.&lt;/p&gt;
&lt;p&gt;Эти функции позволяют выполнять вычисления с использованием встроенных наборов знаний о календарях и датах.&lt;/p&gt;
&lt;p&gt;Используя диапазоны времени и дат вместе со статистическими выражениями можно создавать осмысленные сравнения по сравнимым периодам времени для продаж, количеству товара и так далее.&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h2 id=&#34;функции-возвращающие-столбец-дат&#34;&gt;Функции возвращающие столбец дат&lt;/h2&gt;
&lt;p&gt;Столбец дат это таблица содержащую один столбец со значениями даты.&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h3 id=&#34;операции-с-периодами&#34;&gt;Операции с периодами&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Имя функции&lt;/th&gt;
&lt;th&gt;Описание&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/ee634905&#34;&gt;DATEADD&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Столбец дат, сдвинутых в будущее или в прошлое от дат в текущем контексте на указанное количество интервалов.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/ee634557&#34;&gt;DATESBETWEEN&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Столбец дат, за период с начальной до конечной даты.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/ee634539&#34;&gt;DATESINPERIOD&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Столбец дат, который начинается с начальной даты и продолжается определенное количество интервалов.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/ee634873&#34;&gt;PARALLELPERIOD&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Столбец дат, со сдвинутыми на несколько интервалов вперед или назад датами, от дат из столбца параметров в текущем контексте.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/ee634972&#34;&gt;SAMEPERIODLASTYEAR&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Столбец дат, со сдвинутыми на один год назад от дат, из столбца параметров в текущем контексте.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h3 id=&#34;операции-днем-месяцем-кварталом-и-годом&#34;&gt;Операции днем, месяцем, кварталом и годом&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Тип&lt;/th&gt;
&lt;th&gt;День&lt;/th&gt;
&lt;th&gt;Месяц&lt;/th&gt;
&lt;th&gt;Квартал&lt;/th&gt;
&lt;th&gt;Год&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Текущий&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/ee634359&#34;&gt;DATESMTD&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/ee634901&#34;&gt;DATESQTD&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/ee634221&#34;&gt;DATESYTD&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Предыдущий&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/ee634803&#34;&gt;PREVIOUSDAY&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/ee634758&#34;&gt;PREVIOUSMONTH&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/ee634385&#34;&gt;PREVIOUSQUARTER&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/ee634770&#34;&gt;PREVIOUSYEAR&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Следующий&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/ee634542&#34;&gt;NEXTDAY&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/ee634392&#34;&gt;NEXTMONTH&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/ee634878&#34;&gt;NEXTQUARTER&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/ee634212&#34;&gt;NEXTYEAR&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h2 id=&#34;функции-возвращающие-ячейку-с-датой&#34;&gt;Функции возвращающие ячейку с датой&lt;/h2&gt;
&lt;p&gt;Ячейка это таблица с одним столбцом и одной строкой.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Тип&lt;/th&gt;
&lt;th&gt;День&lt;/th&gt;
&lt;th&gt;Месяц&lt;/th&gt;
&lt;th&gt;Квартал&lt;/th&gt;
&lt;th&gt;Год&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Первый&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/ee634806&#34;&gt;FIRSTDATE&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/ee634954&#34;&gt;STARTOFMONTH&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/ee634935&#34;&gt;STARTOFQUARTER&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/ee634797&#34;&gt;STARTOFYEAR&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Последний&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/ee634380&#34;&gt;LASTDATE&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/ee634239&#34;&gt;ENDOFMONTH&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/ee634243&#34;&gt;ENDOFQUARTER&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/ee634245&#34;&gt;ENDOFYEAR&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h2 id=&#34;функции-возвращающие-ячейку-со-значением&#34;&gt;Функции возвращающие ячейку со значением&lt;/h2&gt;
&lt;p&gt;Ячейка это таблица с одним столбцом и одной строкой.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Имя функции&lt;/th&gt;
&lt;th&gt;Описание&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/ee634210&#34;&gt;FIRSTNONBLANK&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Возвращает первое значение в столбце column (с фильтрацией по текущему контексту), где выражение не является пустым.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/ee634247&#34;&gt;LASTNONBLANK&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Возвращает последнее значение в столбце column (с фильтрацией по текущему контексту), где выражение не является пустым.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h2 id=&#34;функции-возвращающие-скалярное-значение&#34;&gt;Функции возвращающие скалярное значение&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Тип&lt;/th&gt;
&lt;th&gt;Месяц&lt;/th&gt;
&lt;th&gt;Квартал&lt;/th&gt;
&lt;th&gt;Год&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Сальдо на начало&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/ee634224&#34;&gt;OPENINGBALANCEMONTH&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/ee634931&#34;&gt;OPENINGBALANCEQUARTER&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/ee634886&#34;&gt;OPENINGBALANCEYEAR&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Оборот&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/ee634560&#34;&gt;TOTALMTD&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/ee634579&#34;&gt;TOTALQTD&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/ee634400&#34;&gt;TOTALYTD&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Сальдо на конец&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/ee634215&#34;&gt;CLOSINGBALANCEMONTH&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/ee634876&#34;&gt;CLOSINGBALANCEQUARTER&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/ee634562&#34;&gt;CLOSINGBALANCEYEAR&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;a href=&#34;#TOC&#34;&gt;К содержанию&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h1 id=&#34;информационные-функции&#34;&gt;Информационные функции&lt;/h1&gt;
&lt;p&gt;Информационная функция проверяет ячейку или строку, указанные в качестве аргумента, и сообщает, соответствует ли значение ожидаемому типу.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Имя функции&lt;/th&gt;
&lt;th&gt;Описание&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/ee634204&#34;&gt;ISBLANK&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Проверяет, пустое ли значение, и возвращает значение &lt;code&gt;true&lt;/code&gt; или &lt;code&gt;false&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/dn802550&#34;&gt;ISEMPTY&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Возвращает значение &lt;code&gt;true&lt;/code&gt;, если таблица пустая.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/ee634580&#34;&gt;ISLOGICAL&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Проверяет, является ли значение ошибкой, и возвращает &lt;code&gt;true&lt;/code&gt; или &lt;code&gt;false&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/ee634370&#34;&gt;ISTEXT&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Проверяет, является ли значение текстом, и возвращает &lt;code&gt;true&lt;/code&gt; или &lt;code&gt;false&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/ee634563&#34;&gt;ISNONTEXT&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Проверяет, не является ли значение текстом (пустые ячейки не являются текстом), и возвращает &lt;code&gt;true&lt;/code&gt; или &lt;code&gt;false&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/ee634911&#34;&gt;ISNUMBER&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Проверяет, является ли значение числом, и возвращает &lt;code&gt;true&lt;/code&gt; или &lt;code&gt;false&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/en-us/library/mt171515.aspx&#34;&gt;ISEVEN&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Возвращает значение ИСТИНА, если число четное, и значение ЛОЖЬ, если нечетное.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/en-us/library/mt171506.aspx&#34;&gt;ISODD&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Возвращает значение ИСТИНА, если число нечетное, и значение ЛОЖЬ, если четное.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/gg492163&#34;&gt;ISFILTERED&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Возвращает значение &lt;code&gt;true&lt;/code&gt;, если columnName фильтруется напрямую. Если для столбца не задан фильтр или если фильтрация происходит потому, что выполняется фильтрация другого столбца в той же или в связанной таблице, функция возвращает значение &lt;code&gt;false&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/gg492197&#34;&gt;ISCROSSFILTERED&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Возвращает значение &lt;code&gt;true&lt;/code&gt; при фильтрации по столбцу columnName или другому столбцу в этой же или связанной таблице.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;&#34;&gt;ISSUBTOTAL&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Возвращает значение &lt;code&gt;true&lt;/code&gt;, если текущая строка содержит подытог для заданного столбца, в противном случае возвращает &lt;code&gt;false&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/en-us/library/dn802535.aspx&#34;&gt;ISONORAFTER&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Логическая функция, которая эмулирует поведение предложения &lt;code&gt;Start At&lt;/code&gt; и возвращает &lt;code&gt;true&lt;/code&gt; для строки, которая соответствует всем параметрам условия. Эта функция принимает переменное число аргументов кратное трем (т.н. троек), первые два аргумента в тройке - это сравниваемые выражения, а третий аргумент указывает порядок сортировки. Порядок сортировки по увеличению (по умолчанию) или уменьшению.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/gg492183&#34;&gt;CONTAINS&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Возвращает значение &lt;code&gt;true&lt;/code&gt;, если значения для всех столбцов, на которые имеются ссылки, существуют или содержатся в этих столбцах; в противном случае возвращает значение &lt;code&gt;false&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/en-us/library/mt842621.aspx&#34;&gt;CONTAINSROW&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Возвращает значение &lt;code&gt;true&lt;/code&gt;, если существует по меньшей мере одна строка, в которой все столбцы имеют указанные значения.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/gg492135&#34;&gt;HASONEFILTER&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Возвращает значение &lt;code&gt;true&lt;/code&gt;, если число значений, отсортированных по columnName, равно одному; в противном случае возвращает значение &lt;code&gt;false&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/gg492190&#34;&gt;HASONEVALUE&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Возвращает значение &lt;code&gt;true&lt;/code&gt; при фильтрации содержимого столбца columnName до одного уникального значения. В противном случае возвращается значение &lt;code&gt;false&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h2 id=&#34;информация-о-пользователе&#34;&gt;Информация о пользователе&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Имя функции&lt;/th&gt;
&lt;th&gt;Описание&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/en-us/library/hh230954.aspx&#34;&gt;USERNAME&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Возвращает имя домена и имя пользователя из учетных данных, предоставленных системе при подключении.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;&#34;&gt;USEROBJECTID&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Возвращает идентификатор объекта текущего пользователя из Azure AD для сервера анализа данных Azure и идентификатор безопасности текущего пользователя для локального сервера анализа данных.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;&#34;&gt;USERPRINCIPALNAME&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Возвращает имя субъекта-пользователя.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h2 id=&#34;обработка-ошибок&#34;&gt;Обработка ошибок&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Имя функции&lt;/th&gt;
&lt;th&gt;Описание&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;ERROR&lt;/td&gt;
&lt;td&gt;Принимает текстовое сообщение и порождает ошибку. Может использовать в формулах для описания недопустимого состояния пользовательских данных.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/ee634214&#34;&gt;ISERROR&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Проверяет, является ли значение ошибкой, и возвращает &lt;code&gt;true&lt;/code&gt; или &lt;code&gt;false&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/ee634765&#34;&gt;IFERROR&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Вычисляет выражение и возвращает указанное значение, если выражение ошибочно. В противном случае возвращает значение выражения.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;a href=&#34;#TOC&#34;&gt;К содержанию&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h1 id=&#34;функции-фильтрации&#34;&gt;Функции фильтрации&lt;/h1&gt;
&lt;p&gt;Функции фильтра и значений DAX относятся к самым мощным и сложным, значительно отличаясь от функций Excel. Функции поиска работают с использованием таблиц и связей, как в базе данных. Функции фильтрации дают возможность управлять контекстом данных для создания динамических вычислений. Описание контекста см. в разделе &lt;a href=&#34;https://msdn.microsoft.com/ru-ru/gg413423&#34;&gt;Контекст в формулах DAX&lt;/a&gt;.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Имя функции&lt;/th&gt;
&lt;th&gt;Описание&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/gg492170&#34;&gt;LOOKUPVALUE&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Возвращает значение в столбце result_columnName для строки, соответствующей всем критериям, указанным с помощью параметров search_columnName и search_value.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/ee634825&#34;&gt;CALCULATE&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Вычисляет выражение в контексте, изменяемом указанными фильтрами.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/ee634760&#34;&gt;CALCULATETABLE&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Вычисляет табличное выражение в контексте, изменяемом данными фильтрами.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/ee634202&#34;&gt;RELATED&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Возвращает связанное значение из другой таблицы.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/ee634226&#34;&gt;RELATEDTABLE&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Вычисляет табличное выражение в контексте, изменяемом данными фильтрами.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/ee634802&#34;&gt;ALL&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Возвращает все строки в таблице или все значения в столбце, не учитывая применяемые фильтры. Эта функция полезна для очистки фильтров и создания вычислений по всем строкам таблицы.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/ee634795&#34;&gt;ALLEXCEPT&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Удаляет все фильтры контекста в таблице, кроме фильтров, примененных к указанным столбцам.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/ee634793&#34;&gt;ALLNOBLANKROW&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Из родительской таблицы связи возвращает все непустые строки либо все различные значения столбца, за исключением пустых строк, не учитывая существующие фильтры контекста.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/gg492186&#34;&gt;ALLSELECTED&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Удаляет фильтры содержимого из столбцов и строк в текущем запросе, сохраняя все остальные фильтры содержимого и явные фильтры. Функция ALLSELECTED возвращает содержимое, представляющее все строки и столбцы в запросе, сохраняя явные фильтры и фильтры содержимого, не относящиеся к фильтрам строк и столбцов. Эту функцию можно использовать для получения визуальных итогов в запросах.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/ee634966&#34;&gt;FILTER&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Возвращает таблицу, представляющую подмножество другой таблицы или выражения.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/gg492172&#34;&gt;FILTERS&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Возвращает значения, которые напрямую применяются в качестве фильтров к столбцу columnName.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/ee634943&#34;&gt;DISTINCT&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Возвращает таблицу из одного столбца, содержащую уникальные значения из указанного столбца. Другими словами, повторяющиеся значения удаляются, и возвращаются только уникальные значения. &lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt; &lt;strong&gt;Примечание&lt;/strong&gt; &lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt; Эту функцию нельзя использовать для возвращения результатов в ячейку или столбец на листе. Функция DISTINCT вкладывается в формулу, чтобы получить список уникальных значений, который можно передать другой функции, а затем выполнить подсчет, суммирование или другие операции.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/ee634547&#34;&gt;VALUES&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Возвращает таблицу с одним столбцом, содержащую уникальные значения из указанного столбца или таблицы. Другими словами, повторяющиеся значения удаляются, и возвращаются только уникальные значения. &lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt; &lt;strong&gt;Примечание&lt;/strong&gt; &lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt; Эту функцию нельзя использовать для возвращения результатов в ячейку или столбец на листе. Она служит в качестве промежуточной функции, вложенной в формулу, чтобы получить список уникальных значений, которые можно подсчитать или использовать для фильтрации или суммирования других значений.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/ee634551&#34;&gt;EARLIER&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Возвращает текущее значение указанного столбца на внешнем этапе вычисления для данного столбца. &lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt; Функция EARLIER полезна для вложенных вычислений, когда необходимо указать в качестве входного определенное значение и в зависимости от него проводить вычисления. В Microsoft Excel такие вычисления можно выполнять только в контексте текущей строки, однако в DAX можно сохранить входное значение, а затем выполнить вычисление с использованием данных из всей таблицы. &lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt; Функция EARLIER используется главным образом в контексте вычисляемых столбцов.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/ee634779&#34;&gt;EARLIEST&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Возвращает текущее значение указанного столбца на внешнем этапе вычисления для данного столбца.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/en-us/library/hh213140.aspx&#34;&gt;CUSTOMDATA&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Возвращает содержимое свойства &lt;code&gt;CustomData&lt;/code&gt; в строке подключения.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;a href=&#34;#TOC&#34;&gt;К содержанию&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h1 id=&#34;агрегатные-и-статистические-функции&#34;&gt;Агрегатные и статистические функции&lt;/h1&gt;
&lt;p&gt;Язык выражений анализа данных предоставляет множество функций для вычисления агрегированных выражений. Эти функции:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Схожи со статистическими функциями, используемыми в Microsoft Excel.&lt;/li&gt;
&lt;li&gt;Выполняют статистические выражения.&lt;/li&gt;
&lt;li&gt;Позволяют отфильтровать столбец, прежде чем выполнять статистическую обработку или создавать статистические выражения на основе связанных таблиц.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h2 id=&#34;агрегатные-функции-над-таблицами&#34;&gt;Агрегатные функции над таблицами&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Имя функции&lt;/th&gt;
&lt;th&gt;Описание&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/gg492204&#34;&gt;ADDCOLUMNS&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Добавляет вычисляемые столбцы к выбранной таблице или табличному выражению.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/ee634574&#34;&gt;COUNTROWS&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Возвращает количество строк в таблице.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/gg492184&#34;&gt;ROW&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Возвращает однострочную таблицу. Эта таблица содержит значения, являющиеся результатом выражения, заданного для каждого столбца.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/gg492198&#34;&gt;TOPN&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Возвращает первые $N$ строк таблицы.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/gg492171&#34;&gt;SUMMARIZE&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Возвращает сводную таблицу с вычисленными итогами для перечня сгруппированных столбцов.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/mt163696&#34;&gt;SUMMARIZECOLUMNS&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Возвращает таблицу-сводку по набору групп.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/mt163693&#34;&gt;GROUPBY&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Функция &lt;code&gt;GROUPBY&lt;/code&gt; аналогична функции &lt;code&gt;SUMMARIZE&lt;/code&gt;. Однако &lt;code&gt;GROUPBY&lt;/code&gt; не выполняет неявный &lt;code&gt;CALCULATE&lt;/code&gt; для любых добавочных столбцов, которые он добавляет. &lt;code&gt;GROUPBY&lt;/code&gt; разрешает использовать новую функцию &lt;code&gt;CURRENTGROUP()&lt;/code&gt; внутри функций агрегации в добавочных столбцах, которые она добавляет. &lt;code&gt;GROUPBY&lt;/code&gt; пытается повторно использовать данные, которые были сгруппированы, что делает его высокоэффективным.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/gg492168&#34;&gt;CROSSJOIN&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Возвращает &lt;a href=&#34;https://ru.wikipedia.org/wiki/%D0%9F%D1%80%D1%8F%D0%BC%D0%BE%D0%B5_%D0%BF%D1%80%D0%BE%D0%B8%D0%B7%D0%B2%D0%B5%D0%B4%D0%B5%D0%BD%D0%B8%D0%B5&#34;&gt;декартово произведение&lt;/a&gt; $1 + N$ таблиц, где $N &amp;gt;= 1$.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/gg492196&#34;&gt;GENERATE&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Возвращает декартово произведение всех строк в таблице 1 и таблицы, являющейся результатом вычисления таблицы 2 в контексте текущей строки из таблицы 1.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/gg492206&#34;&gt;GENERATEALL&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Аналогично &lt;code&gt;GENERATE&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/mt243783&#34;&gt;INTERSECT&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Возвращает пересечение строк двух таблиц, сохраняя дубликаты.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/dn802543&#34;&gt;NATURALINNERJOIN&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Выполняет внутреннее соединение таблицы с другой таблицей. Таблицы объединены в общие столбцы (по имени) в двух таблицах. Если две таблицы не имеют общих имен столбцов, возвращается ошибка.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/dn802527&#34;&gt;NATURALLEFTOUTERJOIN&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Выполняет внутреннее соединение таблицы с другой таблицей. Таблицы объединены в общие столбцы (по имени) в двух таблицах. Если две таблицы не имеют общих имен столбцов, возвращается ошибка.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/dn802530&#34;&gt;UNION&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Создает таблицу объединения (объединения) из пары таблиц.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/mt243784&#34;&gt;EXCEPT&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Возвращает строки одной таблицы, которых не существует в другой таблице.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/mt674921.aspx&#34;&gt;DATATABLE&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Создает таблицу с константными значениями средствами языка DAX. Полезно для использования в случае создания короткого редко изменчивого справочника на уровне DAX.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h2 id=&#34;агрегатные-функции-над-столбцами-и-выражениями&#34;&gt;Агрегатные функции над столбцами и выражениями&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Описание&lt;/th&gt;
&lt;th&gt;Обычные&lt;!-- raw HTML omitted --&gt;&lt;a href=&#34;#normalFunc&#34;&gt;1&lt;/a&gt;&lt;!-- raw HTML omitted --&gt;&lt;/th&gt;
&lt;th&gt;Тип A&lt;!-- raw HTML omitted --&gt;&lt;a href=&#34;#typeAFunc&#34;&gt;2&lt;/a&gt;&lt;!-- raw HTML omitted --&gt;&lt;/th&gt;
&lt;th&gt;Тип X&lt;!-- raw HTML omitted --&gt;&lt;a href=&#34;#typeXFunc&#34;&gt;3&lt;/a&gt;&lt;!-- raw HTML omitted --&gt;&lt;/th&gt;
&lt;th&gt;Тип AX&lt;!-- raw HTML omitted --&gt;&lt;a href=&#34;#typeAXFunc&#34;&gt;4&lt;/a&gt;&lt;!-- raw HTML omitted --&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Сумма&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/ee634387&#34;&gt;SUM&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/ee634959&#34;&gt;SUMX&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Среднее&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/ee634231&#34;&gt;AVERAGE&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/ee634809&#34;&gt;AVERAGE&lt;strong&gt;A&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/ee634546&#34;&gt;AVERAGE&lt;strong&gt;X&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Минимум&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/ee634870&#34;&gt;MIN&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/ee634789&#34;&gt;MIN&lt;strong&gt;A&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/ee634576&#34;&gt;MIN&lt;strong&gt;X&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Максимум&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/ee634228&#34;&gt;MAX&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/ee634582&#34;&gt;MAX&lt;strong&gt;A&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/ee634576&#34;&gt;MAX&lt;strong&gt;X&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Количество значений&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/ee634791&#34;&gt;COUNT&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/ee634956&#34;&gt;COUNT&lt;strong&gt;A&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/ee634549&#34;&gt;COUNT&lt;strong&gt;X&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/ee634219&#34;&gt;COUNT&lt;strong&gt;AX&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Количество пустых значений&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/ee634230&#34;&gt;COUNTBLANK&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Количество разных значений&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/gg492142&#34;&gt;DISTINCTCOUNT&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h2 id=&#34;статистические-функции-над-столбцами-и-выражениями&#34;&gt;Статистические функции над столбцами и выражениями&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Описание&lt;/th&gt;
&lt;th&gt;Обычные&lt;!-- raw HTML omitted --&gt;&lt;a href=&#34;#normalFunc&#34;&gt;1&lt;/a&gt;&lt;!-- raw HTML omitted --&gt;&lt;/th&gt;
&lt;th&gt;Тип X&lt;!-- raw HTML omitted --&gt;&lt;a href=&#34;#typeXFunc&#34;&gt;3&lt;/a&gt;&lt;!-- raw HTML omitted --&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Ранг&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/gg492169&#34;&gt;RANK.EQ&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/gg492185&#34;&gt;RANK&lt;strong&gt;X&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Дисперсия всей совокупности&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/gg492143&#34;&gt;VAR.P&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/gg492202&#34;&gt;VAR&lt;strong&gt;X&lt;/strong&gt;.P&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Дисперсия выборки&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/gg492133&#34;&gt;VAR.S&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/gg492132&#34;&gt;VAR&lt;strong&gt;X&lt;/strong&gt;.S&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Стандартное отклонение всей совокупности&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/gg492207&#34;&gt;STDEV.P&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/gg492208&#34;&gt;STDEV&lt;strong&gt;X&lt;/strong&gt;.P&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Стандартное отклонение выборки&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/gg492150&#34;&gt;STDEV.S&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/gg492205&#34;&gt;STDEV&lt;strong&gt;X&lt;/strong&gt;.S&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h2 id=&#34;замечания-к-агрегатным-и-статистическим-функциям&#34;&gt;Замечания к агрегатным и статистическим функциям&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Обычные&lt;/strong&gt; &lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt; - Позволяет вычислить функцию над столбцом. Принимает только числовые значения. &lt;strong&gt;Не производит преобразование данных&lt;/strong&gt; из других типов данных в число, если ячейка содержит:&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;текст - функция не вычисляется и возвращает пусто;&lt;/li&gt;
&lt;li&gt;логическое значение - ячейка игнорируется.&lt;/li&gt;
&lt;li&gt;пустое значение - ячейка игнорируется.&lt;/li&gt;
&lt;li&gt;нулевое значение - ячейка учитывается в расчете.&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Тип A&lt;/strong&gt; &lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt; - Позволяет вычислить функцию над столбцом. Производит преобразование данных других типов к числу (в отличии от &lt;a href=&#34;#normalFunc&#34;&gt;обычных функций&lt;/a&gt;). Если ячейка содержит:&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;текст - если возможно производится преобразование к числу, иначе&lt;/li&gt;
&lt;li&gt;логическое значение - истина = 1, ложь = 0;
возвращается;&lt;/li&gt;
&lt;li&gt;пустое значение - ячейка игнорируется.&lt;/li&gt;
&lt;li&gt;нулевое значение - ячейка учитывается в расчете.&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Тип X&lt;/strong&gt;  &lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt; - Позволяет вычислить функцию над выражением, а не над столбцом отличии от &lt;a href=&#34;#normalFunc&#34;&gt;обычных функций&lt;/a&gt; и функций &lt;a href=&#34;#typeAFunc&#34;&gt;типа A&lt;/a&gt;. В принципе обработки не числовых значений аналогичная &lt;a href=&#34;#normalFunc&#34;&gt;обычной функции&lt;/a&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Тип AX&lt;/strong&gt; &lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt; - Позволяет вычислить функцию над выражением, а не над столбцом отличии от &lt;a href=&#34;#normalFunc&#34;&gt;обычных функций&lt;/a&gt; и функций &lt;a href=&#34;#typeAFunc&#34;&gt;типа A&lt;/a&gt;. В принципе обработки не числовых значений аналогичная  функциям &lt;a href=&#34;#typeAFunc&#34;&gt;типа A&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&#34;#TOC&#34;&gt;К содержанию&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h1 id=&#34;функции-над-иерархическими-данными&#34;&gt;Функции над иерархическими данными&lt;/h1&gt;
&lt;p&gt;Функции для управления данными, представленными в моделях в виде иерархии типа «родители-потомки». Эти функции можно использовать для получения следующих данных:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Общее количество родительских элементов строки, количество уровней в иерархии до родительского элемента верхнего уровня,&lt;/li&gt;
&lt;li&gt;Идентификатор родительского элемента, расположенного на n уровней выше текущей строки,&lt;/li&gt;
&lt;li&gt;Идентификатор n-потомка, считая от верхнего уровня иерархии.&lt;/li&gt;
&lt;li&gt;Определить, является ли определенный родительский элемент элементом иерархии текущей строки. (см. &lt;a href=&#34;https://msdn.microsoft.com/ru-ru/gg492192&#34;&gt;подробнее&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Имя функции&lt;/th&gt;
&lt;th&gt;Описание&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/gg492167&#34;&gt;PATH&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Возвращает строку текста с разделителями, содержащую идентификаторы всех родительских элементов текущего идентификатора, с самого старого до текущего.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/gg492187&#34;&gt;PATHLENGTH&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Возвращает количество родительских элементов указанного элемента в заданных результатах функции PATH, включая сам элемент.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/gg492182&#34;&gt;PATHCONTAINS&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Возвращает значение &lt;code&gt;true&lt;/code&gt;, если указанный объект item существует в указанном объекте path.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/gg492134&#34;&gt;PATHITEM&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Возвращает элемент с указанным параметром position из строки результатов вычисления функции PATH. Позиции считаются слева направо.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/gg492199&#34;&gt;PATHITEMREVERSE&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Возвращает элемент с указанным параметром position из строки результатов вычисления функции PATH. Позиции вычисляются в направлении справа налево.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;a href=&#34;#TOC&#34;&gt;К содержанию&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h1 id=&#34;прочие-функции&#34;&gt;Прочие функции&lt;/h1&gt;
&lt;p&gt;эти функции выполняют уникальные действия, которые не могут быть определены ни одной из других категорий, к которым принадлежит большинство функций.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Имя функции&lt;/th&gt;
&lt;th&gt;Описание&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/ee634820&#34;&gt;BLANK&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Возвращает пустое значение.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;a href=&#34;#TOC&#34;&gt;К содержанию&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h1 id=&#34;синтаксические-элементы&#34;&gt;Синтаксические элементы&lt;/h1&gt;
&lt;p&gt;Несмотря на то что DAX является библиотекой функций ее эволюционное развитие привело разработчиков к необходимости введения удобных синтаксических элементов характерных для языков программирования.&lt;/p&gt;
&lt;p&gt;Например выражение &lt;code&gt;VAR ... RETURN&lt;/code&gt; успешно используется для уменьшения сложности написания и чтения DAX функций с помощью  построения промежуточных вычислений. А типы данных используются при построении справочника на уровне DAX с помощью функции &lt;a href=&#34;#datatableFunction&#34;&gt;DATATABLE&lt;/a&gt;.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Имя элемента&lt;/th&gt;
&lt;th&gt;Описание&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/mt243785&#34;&gt;VAR&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Сохраняет результат выражения как именованную переменную, которая затем может быть передана как аргумент другим выражениям. Когда результирующие значения были рассчитаны для выражения переменных, эти значения не изменяются, даже если эта переменная указана в другом выражении.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/en-us/library/mt842621.aspx&#34;&gt;IN&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Возвращает значение &lt;code&gt;true&lt;/code&gt;, если существует по меньшей мере одно значение, в которой все столбцы имеют указанные значения.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/mt243785&#34;&gt;RETURN&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Возвращает результат вычисления формулы используется совместно с выражением &lt;code&gt;VAR&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;INTEGER&lt;/td&gt;
&lt;td&gt;Целое число&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;DOUBLE&lt;/td&gt;
&lt;td&gt;Число с плавающей точкой&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;STRING&lt;/td&gt;
&lt;td&gt;Строка&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;BOOLEAN&lt;/td&gt;
&lt;td&gt;Логическая переменная&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;CURRENCY&lt;/td&gt;
&lt;td&gt;Валюта&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;DATETIME&lt;/td&gt;
&lt;td&gt;Дата время&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;a href=&#34;#TOC&#34;&gt;К содержанию&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Сравнение обработки пустых значений в DAX, Excel и SQL</title>
      <link>https://DmitriyVlasov.ru/ru/post/handing-of-dax-blank/</link>
      <pubDate>Wed, 05 Jul 2017 15:56:25 +0300</pubDate>
      <guid>https://DmitriyVlasov.ru/ru/post/handing-of-dax-blank/</guid>
      <description>&lt;p&gt;Пустое значение в:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;SQL это &lt;code&gt;null&lt;/code&gt;;&lt;/li&gt;
&lt;li&gt;Excel это не заполненная ячейка;&lt;/li&gt;
&lt;li&gt;DAX это blank.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;В DAX также существует функция &lt;a href=&#34;(https://msdn.microsoft.com/ru-ru/library/ee634820.aspx)&#34;&gt;blank()&lt;/a&gt; возвращающее пустое значение.&lt;/p&gt;
&lt;p&gt;Таблица сравнения поведения пустого значения в разных окружениях&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Выражение&lt;/th&gt;
&lt;th&gt;DAX&lt;/th&gt;
&lt;th&gt;Excel&lt;/th&gt;
&lt;th&gt;SQL&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;blank  +  blank&lt;/td&gt;
&lt;td&gt;blank&lt;/td&gt;
&lt;td&gt;0 (ноль)&lt;/td&gt;
&lt;td&gt;blank&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;blank  +  5&lt;/td&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;blank&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;blank  *  5&lt;/td&gt;
&lt;td&gt;blank&lt;/td&gt;
&lt;td&gt;0 (ноль)&lt;/td&gt;
&lt;td&gt;blank&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5      /  blank&lt;/td&gt;
&lt;td&gt;infinity&lt;/td&gt;
&lt;td&gt;error&lt;/td&gt;
&lt;td&gt;blank&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0      /  blank&lt;/td&gt;
&lt;td&gt;nan&lt;/td&gt;
&lt;td&gt;error&lt;/td&gt;
&lt;td&gt;blank&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;blank  /  blank&lt;/td&gt;
&lt;td&gt;blank&lt;/td&gt;
&lt;td&gt;error&lt;/td&gt;
&lt;td&gt;blank&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;false or  blank&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;false and blank&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;true  or  blank&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;true  and blank&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;blank or  blank&lt;/td&gt;
&lt;td&gt;blank&lt;/td&gt;
&lt;td&gt;error&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;blank and blank&lt;/td&gt;
&lt;td&gt;blank&lt;/td&gt;
&lt;td&gt;error&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h1 id=&#34;источники&#34;&gt;Источники&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.microsoft.com/ru-ru/sql/analysis-services/tabular-models/data-types-supported-ssas-tabular#a-namebkmkhandblanksa-handling-of-blanks-empty-strings-and-zero-values&#34;&gt;docs.microsoft.com, Handling of Blanks, Empty Strings, and Zero Values&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/library/ee634820.aspx&#34;&gt;MSDN, Функция BLANK&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;section class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;В SQL Server отсутствует логический тип данных. Поэтому в явном виде логические операции и таблицы истинности в SQL не применимы. Хотя в предложении &lt;code&gt;WHERE&lt;/code&gt; и есть выражения &lt;code&gt;or&lt;/code&gt; или &lt;code&gt;and&lt;/code&gt; Которые позволяют объединять между выражения возвращающие логический контекст. &lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;
</description>
    </item>
    
    <item>
      <title>Пример использования функции EARLIER</title>
      <link>https://DmitriyVlasov.ru/ru/post/dax-function-earlier/</link>
      <pubDate>Wed, 05 Jul 2017 11:37:05 +0300</pubDate>
      <guid>https://DmitriyVlasov.ru/ru/post/dax-function-earlier/</guid>
      <description>&lt;h1 id=&#34;синтаксис&#34;&gt;Синтаксис&lt;/h1&gt;
&lt;pre&gt;&lt;code&gt;EARLIER(column, [number])
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;параметры&#34;&gt;Параметры&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Параметр&lt;/th&gt;
&lt;th&gt;Обязательный&lt;/th&gt;
&lt;th&gt;Описание&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;column&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Да&lt;/td&gt;
&lt;td&gt;Столбец или выражение, результатом которого служит столбец.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;number&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Нет&lt;/td&gt;
&lt;td&gt;Следующий внешний этап вычисления. По умолчанию 1.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;возвращаемое-значение&#34;&gt;Возвращаемое значение&lt;/h2&gt;
&lt;p&gt;Текущее значение строки из столбца &lt;code&gt;column&lt;/code&gt; на расстоянии в &lt;code&gt;number&lt;/code&gt; внешних этапов вычисления.&lt;/p&gt;
&lt;h1 id=&#34;пример&#34;&gt;Пример&lt;/h1&gt;
&lt;pre&gt;&lt;code class=&#34;language-dax&#34; data-lang=&#34;dax&#34;&gt;=
COUNTROWS (
    FILTER (
        ProductSubcategory;
        EARLIER ( ProductSubcategory[TotalSubcategorySales] )
            &amp;lt; ProductSubcategory[TotalSubcategorySales]
    )
)
    + 1
&lt;/code&gt;&lt;/pre&gt;&lt;ol&gt;
&lt;li&gt;Функция &lt;code&gt;EARLIER&lt;/code&gt; получает значение TotalSubcategorySales для текущей строки в таблице. В данном случае, поскольку процесс только начинается, это первая строка в таблице.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;EARLIER([TotalSubcategorySales])&lt;/code&gt; дает результат $ 156 176.88 — текущая строка во внешнем цикле.&lt;/li&gt;
&lt;li&gt;Теперь функция &lt;code&gt;FILTER&lt;/code&gt; возвращает таблицу, где все строки имеют значение TotalSubcategorySales, превышающее $ 156 176.88 (текущее значение &lt;code&gt;EARLIER&lt;/code&gt;).&lt;/li&gt;
&lt;li&gt;Функция &lt;code&gt;COUNTROWS&lt;/code&gt; подсчитывает строки отфильтрованной таблицы и присваивает новому вычисляемому столбцу в текущей строке полученное значение и прибавляет единицу &lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;.&lt;/li&gt;
&lt;li&gt;Формула вычисляемого столбца переходит к следующей строке, и шаги с 1 по 4 повторяются. Эти шаги повторяются до конца таблицы.&lt;/li&gt;
&lt;li&gt;Функция &lt;code&gt;EARLIER&lt;/code&gt; всегда получает значение столбца перед выполнением текущей операции в таблице. Чтобы получить значение на более раннем этапе цикла, установите второй аргумент в значение 2.&lt;/li&gt;
&lt;/ol&gt;
&lt;section class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;Прибавлять единицу необходимо, чтобы предотвратить появление &lt;a href=&#34;../handing-of-dax-blank&#34;&gt;пустого значения&lt;/a&gt; в качестве значения с верхним рангом. &lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;
</description>
    </item>
    
    <item>
      <title>Заметки с мероприятия Технологии будущего. Microsoft Devcon School</title>
      <link>https://DmitriyVlasov.ru/ru/post/devcon-school-future-technologies/</link>
      <pubDate>Sat, 10 Jun 2017 00:00:00 +0000</pubDate>
      <guid>https://DmitriyVlasov.ru/ru/post/devcon-school-future-technologies/</guid>
      <description>&lt;p&gt;1 июня 2017 принял участие в мероприятии &lt;a href=&#34;https://events.techdays.ru/Future-Technologies/2017-06/&#34;&gt;DevCon School Технологии будущего&lt;/a&gt; проводимого компанией Microsoft. Мероприятие проходило в Москве на территории центра [Digital October] (digitaloctober.ru/ru). Ключевыми темами мероприятия были:  Искусственный интеллект, Блокчейн, Azure Stack и гибридные облака, контейнеры и микросервисы, DevOps и процессы разработки, Безопасная разработка, Машинное обучение.
  &lt;/p&gt;
&lt;h1 id=&#34;подборка-ссылок-на-материалы&#34;&gt;Подборка ссылок на материалы&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/playlist?list=PLVDsxiCH_PqRIZ84g-1X57Tr6VHBVVevP&#34;&gt;Запись видео с открытия, интенсива по нейронным сетям и отдельным трекам&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/evangelism/DevCon-School/tree/master/Big%20June%20School&#34;&gt;Презентации и обучающие материалы с интенсива и большинства треков&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;машинное-обучение&#34;&gt;Машинное обучение&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Определение опечаток в тексте &lt;a href=&#34;https://ru.wikipedia.org/wiki/%D0%A0%D0%B0%D1%81%D1%81%D1%82%D0%BE%D1%8F%D0%BD%D0%B8%D0%B5_%D0%9B%D0%B5%D0%B2%D0%B5%D0%BD%D1%88%D1%82%D0%B5%D0%B9%D0%BD%D0%B0&#34;&gt;Алгоритм расстояние Левенштейна&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://ru.wikipedia.org/wiki//%D0%9C%D0%B5%D1%82%D0%BE%D0%B4_%D0%BE%D0%B1%D1%80%D0%B0%D1%82%D0%BD%D0%BE%D0%B3%D0%BE_%D1%80%D0%B0%D1%81%D0%BF%D1%80%D0%BE%D1%81%D1%82%D1%80%D0%B0%D0%BD%D0%B5%D0%BD%D0%B8%D1%8F_%D0%BE%D1%88%D0%B8%D0%B1%D0%BA%D0%B8&#34;&gt;Метод обратного распространения ошибки&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://bit.ly/deeplearnbox&#34;&gt;Как выбрать компьютер для машинного обучения&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;NVidia Deep Learning Institute. Практические материалы и учебные курсы по глубокому обучению:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.nvidia.com/en-us/deep-learning-ai/education/&#34;&gt;Глобальный портал&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.nvidia.ru/deep-learning-ai/education/&#34;&gt;Российская локализация&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;сообщества&#34;&gt;Сообщества&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Официальный русскоязычный канал в телеграмме &lt;a href=&#34;https://t.me/microsoftschool&#34;&gt;Microsoft Developer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Официальный канал Microsoft в телеграмме по &lt;a href=&#34;https://t.me/neuroworkshop&#34;&gt;машинному обучению и интеллектуальным сервисам&lt;/a&gt;
 &lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;обучение&#34;&gt;Обучение&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Если вас заинтересовали прикладные вопросы Машинного обучения и анализа данных рекомендую начать изучение вопроса с блога &lt;a href=&#34;https://habrahabr.ru/users/i_shutov/topics/page2/&#34;&gt;Ильи Шутова на хабре&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Для комплексного обучения по направлению машинное обучение и анализ данных рекомендую специализацию &lt;a href=&#34;https://www.coursera.org/specializations/machine-learning-data-analysis&#34;&gt;Машинное обучение и анализ данных от МФТИ и Яндекса&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Учебник библиотеки FParsec</title>
      <link>https://DmitriyVlasov.ru/ru/publication/fparsec-tutorial/fparsec-tutorial/</link>
      <pubDate>Sat, 28 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://DmitriyVlasov.ru/ru/publication/fparsec-tutorial/fparsec-tutorial/</guid>
      <description>&lt;h1 id=&#34;введение&#34;&gt;Введение&lt;/h1&gt;
&lt;p&gt;Этот учебник знакомит вас с основными понятиями библиотеки FParsec. Наша цель — дать вам возможность попробовать создать приложения синтаксического разбора с помощью библиотеки FParsec. Мы охватим только основные идеи и дадим беглый обзор библиотеки по &lt;a href=&#34;https://ru.wikipedia.org/wiki/API&#34;&gt;API&lt;/a&gt;&lt;!-- raw HTML omitted --&gt;en&lt;!-- raw HTML omitted --&gt;. Но, надеемся, это будет достаточной основой для того, чтобы вы могли в дальнейшем использовать FParsec самостоятельно с помощью: &lt;a href=&#34;http://www.quanttec.com/fparsec/users-guide/&#34;&gt;руководства пользователя&lt;/a&gt;&lt;!-- raw HTML omitted --&gt;en&lt;!-- raw HTML omitted --&gt;, &lt;a href=&#34;http://www.quanttec.com/fparsec/reference/&#34;&gt;справочника по API&lt;/a&gt;&lt;!-- raw HTML omitted --&gt;en&lt;!-- raw HTML omitted --&gt; и примеров синтаксических анализаторов в папке &lt;a href=&#34;https://bitbucket.org/fparsec/main/src/c234349e7b738e09a1b9eb53f5f1ef77d584f09b/Samples/?at=default&#34;&gt;Samples&lt;/a&gt;&lt;!-- raw HTML omitted --&gt;en&lt;!-- raw HTML omitted --&gt;.&lt;/p&gt;
&lt;h2 id=&#34;благодарности&#34;&gt;Благодарности&lt;/h2&gt;
&lt;p&gt;Благодарю мою жену Ольгу за помощь в переводе, стилистической выверке и редактуре теста.&lt;/p&gt;
&lt;h1 id=&#34;оглавление&#34;&gt;Оглавление&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://DmitriyVlasov.ru/ru/publication/fparsec-tutorial/01-preliminaries/&#34;&gt;Вступление&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://DmitriyVlasov.ru/ru/publication/fparsec-tutorial/02-parsing-a-single-float/&#34;&gt;Синтаксический анализатор числа с плавающей точкой&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://DmitriyVlasov.ru/ru/publication/fparsec-tutorial/03-parsing-a-float-between-brackets/&#34;&gt;Синтаксический анализатор числа с плавающей точкой в скобках&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://DmitriyVlasov.ru/ru/publication/fparsec-tutorial/04-abstracting-parsers/&#34;&gt;Абстрактные синтаксические анализаторы&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://DmitriyVlasov.ru/ru/publication/fparsec-tutorial/05-parsing-a-list-of-floats/&#34;&gt;Синтаксический анализатор списка чисел с плавающей точкой&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://DmitriyVlasov.ru/ru/publication/fparsec-tutorial/06-handling-whitespace/&#34;&gt;Обработка пробелов&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://DmitriyVlasov.ru/ru/publication/fparsec-tutorial/07-parsing-string-data/&#34;&gt;Синтаксический анализатор строковых данных&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://DmitriyVlasov.ru/ru/publication/fparsec-tutorial/08-sequentially-applying-parsers/&#34;&gt;Использование последовательности синтаксических анализаторов&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://DmitriyVlasov.ru/ru/publication/fparsec-tutorial/09-parsing-alternatives/&#34;&gt;Использование альтернативных синтаксических анализов&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://DmitriyVlasov.ru/ru/publication/fparsec-tutorial/10-fsharps-value-restriction/&#34;&gt;Ограничение значений F#&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://DmitriyVlasov.ru/ru/publication/fparsec-tutorial/11-parsing-json/&#34;&gt;Синтаксический анализ JSON&lt;/a&gt; (В работе)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://DmitriyVlasov.ru/ru/publication/fparsec-tutorial/12-what-now/&#34;&gt;Куда дальше?&lt;/a&gt; (В работе)&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;учебник-на-других-языках&#34;&gt;Учебник на других языках&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/stephan-tolksdorf&#34;&gt;Стефан Тольксдорф&lt;/a&gt;, авторский текст на &lt;a href=&#34;http://www.quanttec.com/fparsec/tutorial.html&#34;&gt;английском языке&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://twitter.com/gab_km&#34;&gt;Gab_km&lt;/a&gt;, перевод на &lt;a href=&#34;http://blog.livedoor.jp/gab_km/archives/1437534.html&#34;&gt;японский язык&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Инструменты</title>
      <link>https://DmitriyVlasov.ru/ru/post/tools/</link>
      <pubDate>Sun, 27 Nov 2016 00:00:00 +0000</pubDate>
      <guid>https://DmitriyVlasov.ru/ru/post/tools/</guid>
      <description>&lt;p&gt;В своей работы при поддержке информационных систем зачастую кроме предлагаемых основной платформой средств приходиться использовать еще ряд дополнительных инструментов и сервисов.&lt;/p&gt;
&lt;p&gt;Ниже описан используемый мною &amp;ldquo;чемоданчик инструментов&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;Часть инструментов вы сами можете использовать уже сегодня и возможно использовали раньше. Часть инструментов может быть для вас новой. Все приведенные ниже инструменты использовались мною в работе на ежедневной основе (F#). По части инструментов были пилотные и экспериментальные проекты, но которые считаю очень перспективными и на которые, по моему мнению, стоит обратить внимание при развитии ИТ среды предприятия (язык R, язык PowerShell, Microsoft Power BI).&lt;/p&gt;
&lt;p&gt;Часть это утилиты, которые мы можете использовать здесь и сейчас, часть требует вдумчивого обучения (в первую очередь это касается языков программирования) но затем возвращается сторицей. Приведенные ссылки позволяют вам стартовать с этими инструментами уже сегодня. За ссылки из этого списка я бы много отдал бы ранее.&lt;/p&gt;
&lt;p&gt;Большинство предлагаемых ресурсов находятся в отрытом доступе и не требуют дополнительной платы для использования на работы и дома. Программные продукты, кроме расширений Майрософт Офис имеют открытый исходный код. Сервисы бесплатные и не требуют платы за использование. Если сервис или программа требует оплаты об этом описано отдельно.&lt;/p&gt;
&lt;h2 id=&#34;утилиты&#34;&gt;Утилиты&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://getgreenshot.org/&#34;&gt;Greenshot&lt;/a&gt; — Создание скриншотов, и обработка снимков&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://keepass.info/&#34;&gt;KeePass&lt;/a&gt; — Безопасное хранение паролей&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://notepad-plus-plus.org/&#34;&gt;Notepad++&lt;/a&gt; — Продвинутый текстовый редактор с поддержкой поиска по файловой системе и регулярными выражениями&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://obsproject.com/&#34;&gt;OBS Studio&lt;/a&gt; — Запись видео с экрана или звука из скайпа или «софтофона» Cisco.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://bitbucket.org/temofey/sqldynamiteinstall/downloads&#34;&gt;SQL Dynamite&lt;/a&gt; — Поиск метаданных в любых реляционных базах данных в частности в SQL Server.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://code.visualstudio.com/&#34;&gt;Visual Studio Code&lt;/a&gt; — Современный расширяемый текстовый редактор. С богатым набором &lt;a href=&#34;code-plugins&#34;&gt;расширений&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.videolan.org/vlc&#34;&gt;VLC&lt;/a&gt; — Известный видео комбайн с отличной функцией ускоренной перемотки. Позволяет просматривать видео на удобной вас скорости с ускорением до четырех и более раз.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://windirstat.net/&#34;&gt;WinDirStat&lt;/a&gt; — Статистика использования файловой системы.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://winmerge.org/&#34;&gt;WinMerge&lt;/a&gt; — Утилита сравнения версий исходного кода.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://githowto.com/ru&#34;&gt;Git&lt;/a&gt; — Система вершинного хранения чего угодно.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://screentogif.codeplex.com/&#34;&gt;ScreenToGif&lt;/a&gt; — Программа для создания анимированных гифок для использования в интерактивных инструкциях.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://sqlitebrowser.org/&#34;&gt;Sqlitebrowser&lt;/a&gt; — Программа просмотра структуры и данных встраиваемой базы данных SQLLite.  (Используется   повсеместно, в практике БТК используется 1С ERP для хранения логов операций.)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.stati-cal.com/index.html&#34;&gt;StatiCal&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://msdn.microsoft.com/ru-ru/library/mt238290.aspx&#34;&gt;SQL Server Management Studio (SSMS)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;майкрософт-офис&#34;&gt;Майкрософт Офис&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://onenote.com&#34;&gt;Onenote&lt;/a&gt; —  программа для создания быстрых заметок и организации личной информации, блокнот с иерархической организацией записей, может служить аналогом обычного канцелярского блокнота. Использовал для систематизации знаний и поддержки ИТ систем.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://support.office.com/ru-ru/article/Power-Query-%E2%80%94-%D0%BE%D0%B1%D0%B7%D0%BE%D1%80-%D0%B8-%D0%BE%D0%B1%D1%83%D1%87%D0%B5%D0%BD%D0%B8%D0%B5-ed614c81-4b00-4291-bd3a-55d80767f81d&#34;&gt;Power Query&lt;/a&gt; — это технология подключения данных, которое дает возможность находить, подключение, объединения и уточнения источников данных в соответствии с потребностями анализа.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;языки-программирования&#34;&gt;Языки программирования&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;F# — это мультипарадигмальный язык программирования из семейства языков .NET Framework, поддерживающий функциональное программирование в дополнение к императивному (процедурному) и объектно-ориентированному программированию.&lt;/li&gt;
&lt;li&gt;PowerShell — расширяемое средство автоматизации от Майкрософт с открытым исходным кодом, состоящее из оболочки с интерфейсом командной строки и сопутствующего языка сценариев.&lt;/li&gt;
&lt;li&gt;R — язык программирования для статистической обработки данных и работы с графикой, а также свободная программная среда вычислений с открытым исходным кодом в рамках проекта GNU. Для старта рекомендую начать с цикла статей &lt;a href=&#34;https://habrahabr.ru/users/i_shutov/topics&#34;&gt;Ильи Шутова на Хабре&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;сервисы&#34;&gt;Сервисы&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;ukeeper.com&#34;&gt;ukeeper.com&lt;/a&gt; — Отправьте письмо на адрес &lt;a href=&#34;mailto:drops@ukeeper.com&#34;&gt;drops@ukeeper.com&lt;/a&gt; со ссылкой на интересующую вас страницу, а вам в ответ придет письмо содержащее очищенную лишней мишуры и подготовленную статью. Использовал в комбинации с Onenote для создания коллекции статей по интересующим технологиям.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.artlebedev.ru/decoder/&#34;&gt;Декодер&lt;/a&gt; — Если у вас завалялся текст в неизвестной кодировке расшифровывает его.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.daxformatter.com/&#34;&gt;Daxformater&lt;/a&gt; — Сервис обеспечивает красивое форматирование формул на языке &lt;a href=&#34;../../tags/dax/&#34;&gt;DAX&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;вэбсайты&#34;&gt;Вэбсайты&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://habr.ru&#34;&gt;habr.ru&lt;/a&gt; — Крупнейший и старейший в России профессиональный портал о ИТ.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://radio-t.com&#34;&gt;radio-t.com&lt;/a&gt; — Старейший в рунете технический подкаст про ИТ&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://devzen.ru&#34;&gt;devzen.ru&lt;/a&gt; — Сильный технический подкаст про ИТ с упором качественную подачу сложных и современных технологий.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;%5Bhttp://piter-united.ru%5D&#34;&gt;piter-united.ru&lt;/a&gt; — Крупнейший в Санкт-Петербурге форум и собрание специалистов ИТ отрасли и смежных специалистов. Собрание проходит каждый квартал.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.lektorium.tv&#34;&gt;lektorium.tv&lt;/a&gt; — Самый большой видеоархив академических лекций на русском языке. Коллекция постоянно пополняется ведущими учебными заведениями России. Доступ к материалам бесплатный.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://xgu.ru&#34;&gt;xgu.ru&lt;/a&gt; — Набор профессиональных статей по открытым технологиям Linux с упором на телекоммуникации и виртуализацию.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://StackShare.io&#34;&gt;StackShare.io&lt;/a&gt; — Сервис обзора современных платформ, стеков и программных средств.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;книги&#34;&gt;Книги&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Интерфейс. Основы проектирования взаимодействия&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;расширения&#34;&gt;Расширения&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;code-plugins&#34;&gt;Расширения для Visual Studio Code&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Расширения для Visual Studio Code</title>
      <link>https://DmitriyVlasov.ru/ru/post/code-plugins/</link>
      <pubDate>Sun, 27 Nov 2016 00:00:00 +0000</pubDate>
      <guid>https://DmitriyVlasov.ru/ru/post/code-plugins/</guid>
      <description>&lt;p&gt;Ниже в таблице представлены расширения для Visual Studio Code используемые мною в работе на ежедневной основе. В столбце &amp;ldquo;Название расширения&amp;rdquo; приведены ссылки на официальную страницу расширения в &lt;a href=&#34;https://marketplace.visualstudio.com/&#34;&gt;магазине расширений Visual Studio&lt;/a&gt;.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Лого&lt;/th&gt;
&lt;th&gt;Название расширения&lt;/th&gt;
&lt;th&gt;Назначение&lt;/th&gt;
&lt;th&gt;Детали&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;!-- raw HTML omitted --&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://goo.gl/dhhEgY&#34;&gt;code-settings-sync&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Синхронизирует настройки и расширения между разными компьютерами.&lt;/td&gt;
&lt;td&gt;Для использования Расширение необходима учетная запись на &lt;a href=&#34;https://github.com/&#34;&gt;Гитхабе&lt;/a&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;!-- raw HTML omitted --&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://goo.gl/dBhRDe&#34;&gt;csharp&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Поддержка языка C#&lt;/td&gt;
&lt;td&gt;Официальная поддержка языка C# от Майкрософт. Осуществляется с помощью использования в бэкэнде проекта &lt;a href=&#34;http://www.omnisharp.net/&#34;&gt;OmniSharp&lt;/a&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;!-- raw HTML omitted --&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://goo.gl/3cKwNE&#34;&gt;githistory&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;!-- raw HTML omitted --&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://goo.gl/z335cr&#34;&gt;Ionide-FAKE&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;!-- raw HTML omitted --&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://goo.gl/qiGVrF&#34;&gt;Ionide-fsharp&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;!-- raw HTML omitted --&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://goo.gl/F6ussX&#34;&gt;Ionide-Paket&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;!-- raw HTML omitted --&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://goo.gl/PA1Gqs&#34;&gt;MDTools&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;!-- raw HTML omitted --&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://goo.gl/USDnfy&#34;&gt;partial-diff&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;!-- raw HTML omitted --&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://goo.gl/xu6a8X&#34;&gt;mssql&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Поддержка Майкрософт Сиквел Сервер.&lt;/td&gt;
&lt;td&gt;На момент публикации является предварительной публичной версией. Для быстрого старта смотри подробнее &lt;a href=&#34;https://docs.microsoft.com/en-us/sql/linux/sql-server-linux-develop-use-vscode&#34;&gt;руководство по началу использования расширения (en)&lt;/a&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;!-- raw HTML omitted --&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://goo.gl/pzB2T8&#34;&gt;path-intellisense&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Расширение значительно экономит, время когда нужно указать относительный путь к папке или файлу.&lt;/td&gt;
&lt;td&gt;Автоматически срабатывает в любом файле при работе со строкой в двойных или одинарных кавычках. Если содержимое строки начинается с точки или двойной точки пытается дополнить путь к файлу или папке. Двойная точка верх по каталогам. Одинарная вниз по каталогу.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;!-- raw HTML omitted --&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://goo.gl/BgnBn8&#34;&gt;PowerShell&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Поддержка языка Power Shell&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;!-- raw HTML omitted --&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://goo.gl/N8WkUs&#34;&gt;spellcheck&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Проверка орфографии русского и английского языка.&lt;/td&gt;
&lt;td&gt;Поддержка осуществляется с помощью сервиса &lt;a href=&#34;https://tech.yandex.ru/speller/doc/dg/concepts/About-docpage/&#34;&gt;yandex spell&lt;/a&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;!-- raw HTML omitted --&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://goo.gl/TPQb5d&#34;&gt;vscode-icons&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Множество красивых иконок для файлов и папок.&lt;/td&gt;
&lt;td&gt;Набор иконок для огромного количества типов файлов и типовых папок часто встречающихся в проектах разработки на большинстве известных и не известных языков и проектов.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
</description>
    </item>
    
    <item>
      <title>Обзор F# 4.0</title>
      <link>https://DmitriyVlasov.ru/ru/talk/review-fsharp-4/</link>
      <pubDate>Tue, 25 Aug 2015 20:00:00 +0300</pubDate>
      <guid>https://DmitriyVlasov.ru/ru/talk/review-fsharp-4/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>
